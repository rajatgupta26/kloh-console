{"version":3,"sources":["assets/img/bg/background_1920-2.jpg","assets/img/bg/background_1920-11.jpg","assets/img/bg/background_1920-18.jpg","assets/img/bg/background_640-1.jpg","assets/img/bg/background_640-3.jpg","assets/img/bg/background_1920-5.jpg","assets/img/bg/background_1920-6.jpg","assets/img/bg/background_1920-7.png","assets/img/bg/background_1920-19.jpg","assets/img/products/product_640-1.jpg","assets/img/products/product_640-2.jpg","assets/img/products/product_640-3.jpg","assets/img/products/product_640-4.jpg","assets/img/products/product_640-5.jpg","assets/img/products/product_640-6.jpg","assets/img/users/100_7.jpg","assets/img/users/100_8.jpg","assets/img/users/100_9.jpg","assets/img/users/100_10.jpg","assets/img/users/100_11.jpg","assets/img/users/100_12.jpg","assets/img/users/100_13.jpg","assets/img/users/100_14.jpg","components/AuthForm.js","components/GAListener.js","utils/bemnames.js","components/Layout/Content.js","components/SourceLink.js","components/Layout/Footer.js","utils/propTypes.js","components/Avatar.js","components/Card/UserCard.js","components/Card/AnnouncementCard.js","components/Todos.js","components/Card/TodosCard.js","components/Notifications.js","components/SearchInput.js","demos/header.js","hocs/withBadge.js","components/Layout/Header.js","components/Layout/LayoutRoute.js","utils/constants.js","components/Layout/MainLayout.js","components/Layout/Sidebar.js","components/Typography.js","components/Page.js","pages/AuthModalPage.js","pages/AuthPage.js","pages/ButtonPage.js","utils/colors.js","demos/cardPage.js","demos/chartjs.js","pages/CardPage.js","components/HorizontalAvatarList.js","components/MapWithBubbles.js","components/ProductMedia.js","components/SupportTicket.js","components/UserProgressTable.js","components/Widget/NumberWidget.js","components/Widget/IconWidget.js","demos/dashboardPage.js","pages/DashboardPage.js","demos/widgetPage.js","pages/ModalPage.js","pages/WidgetPage.js","App.js","index.js","assets/img/users/100_1.jpg","assets/img/users/100_4.jpg","assets/img/users/100_2.jpg","assets/img/users/100_3.jpg","assets/img/users/100_5.jpg","assets/img/logo/logo_200.png","assets/img/users/100_6.jpg"],"names":["module","exports","__webpack_require__","p","AuthForm","changeAuthState","authState","event","preventDefault","_this","props","onChangeAuthState","handleSubmit","buttonText","this","isLogin","isSignup","_this$props","showLogo","usernameLabel","usernameInputProps","passwordLabel","passwordInputProps","confirmPasswordLabel","confirmPasswordInputProps","children","onLogoClick","react_default","a","createElement","Form","onSubmit","className","src","logo200Image","style","width","height","cursor","alt","onClick","FormGroup","Label","for","Input","check","type","Button","size","block","renderButtonText","href","STATE_LOGIN","STATE_SIGNUP","React","Component","defaultProps","placeholder","ReactGA","initialize","process","GAListener","sendPageView","context","router","history","location","listen","set","page","pathname","pageview","contextTypes","PropTypes","object","namespace","bemNames","create","blockName","concat","b","_len","arguments","length","more","Array","_key","classNames","e","_len2","_key2","m","_len3","_key3","bem","bn","Content","_ref","Tag","tag","restProps","Object","objectWithoutProperties","classes","assign","Container","SourceLink","target","rel","Footer","Navbar","Nav","navbar","NavItem","components_SourceLink","propTypes","objectSpread","ID","oneOfType","string","number","isRequired","component","func","date","instanceOf","Date","Avatar","rounded","circle","rounded-circle","userImage","UserCard","avatar","avatarSize","title","subtitle","text","Card","inverse","CardBody","components_Avatar","CardTitle","CardSubtitle","CardText","AnnouncementCard","color","header","name","buttonProps","bgColor","CardHeader","Todos","arrayOf","shape","id","done","bool","todos","ListGroup","flush","map","_ref2","undefined","ListGroupItem","key","checked","readOnly","TodosCard","image","CardImg","CardImgOverlay","opacity","components_Todos","backgroundImage","Notifications","notificationsData","message","Media","left","body","middle","right","SearchInput","inline","index_esm","user1Image","user2Image","user3Image","user4Image","user5Image","positionMap","top-right","top","top-left","bottom-left","bottom","bottom-right","sizeMap","xs","sm","md","lg","xl","withBadge","_ref$position","position","_ref$size","_ref$style","restBadgeProps","WrappedComponent","_ref2$tag","Badge","borderRadius","border","MdNotificationsActiveWithBadge","display","justifyContent","alignItems","MdNotificationsActive","Header","state","isOpenNotificationPopover","isNotificationConfirmed","isOpenUserCardPopover","toggleNotificationPopover","setState","toggleUserCardPopover","handleSidebarControlButton","stopPropagation","document","querySelector","classList","toggle","light","expand","outline","components_SearchInput","NavLink","Popover","placement","isOpen","PopoverBody","components_Notifications","minWidth","Card_UserCard","action","LayoutRoute","Layout","layout","rest","Route","render","NOTIFICATION_SYSTEM_STYLE","NotificationItem","DefaultStyle","fontSize","success","borderTop","backgroundColor","WebkitBoxShadow","MozBoxShadow","boxShadow","error","warning","info","background","Title","margin","padding","paddingRight","fontWeight","MessageWrapper","Dismiss","fontFamily","textAlign","float","lineHeight","Action","ActionWrapper","MainLayout","handleContentClick","isSidebarOpen","breakpoint","openSidebar","checkBreakpoint","_this2","setTimeout","notificationSystem","addNotification","level","openOrClose","add","remove","_this3","Layout_Sidebar","Layout_Content","fluid","Layout_Header","Layout_Footer","NotificationSystem_default","dismissible","ref","contains","navItems","MdClass","to","exact","Icon","MdDashboard","MdFace","MdPlace","Sidebar","isOpenComponents","isOpenContents","isOpenPages","handleClick","prevState","defineProperty","vertical","index","activeClassName","tagMap","h1","h2","h3","h4","h5","h6","display-1","display-2","display-3","display-4","lead","blockquote","Typography","TypoComp","Page","breadcrumbs","components_Typography","Breadcrumb","BreadcrumbItem","active","AuthModalPage","show","handleAuthState","externalCloseBtn","components_Page","Row","Col","Modal","backdrop","backdropClassName","external","centered","ModalBody","components_AuthForm","ButtonPage","rSelected","cSelected","selected","indexOf","push","splice","toConsumableArray","disabled","ButtonGroup","onCheckboxBtnClick","includes","JSON","stringify","getColor","availableColor","window","getComputedStyle","documentElement","getPropertyValue","overlayCards","imgUrl","bg5Image","bg6Image","bg7Image","bg19Image","bgCards","gradientCards","getStackLineChart","labels","data","canvas","gradient","getContext","createLinearGradient","addColorStop","ChartJS","helpers","alpha","rgbString","datasets","label","borderColor","fill","stackLineChartOptions","tooltips","intersect","animation","duration","scales","xAxes","yAxes","legend","CardPage","bg1Image","bg3Image","bg11Image","bg18Image","CardLink","es","options","_ref3","HorizontalAvatarList","avatars","avatarProps","reversed","leng","count","i","isFirstItem","react","zIndex","marginLeft","marginBottom","marginTop","UncontrolledTooltip","delay","hide","cityScale","scaleLinear","domain","range","BubbleMap","cities","secondaryColor","lightColor","lib","projectionConfig","scale","center","disablePanning","geography","world50m","geographies","projection","default","stroke","strokeWidth","hover","pressed","city","marker","cx","cy","r","population","ProductMedia","description","heading","statusMap","open","closed","pending","SupportTicket","status","defualtProps","AvatarWithBadge","UserProgressTable","headers","usersData","Table","responsive","item","progress","Progress","value","NumberWidget","_ref$progress","IconWidget","icon","iconProps","productsData","product1Image","product2Image","product3Image","product4Image","product5Image","product6Image","avatarsData","user6Image","user7Image","user8Image","user9Image","user10Image","user11Image","user12Image","user13Image","user14Image","userProgressTableData","supportTicketsData","todosData","chartjs","bar","stack","mode","stacked","doughnut","animateScale","animateRotate","line","scaleLabel","labelString","gridLines","today","lastWeek","getFullYear","getMonth","getDate","DashboardPage","scrollTo","primaryColor","Widget_NumberWidget","CardGroup","Widget_IconWidget","MdThumbUp","MdRateReview","MdShare","components_ProductMedia","components_UserProgressTable","reverse","react_infinite_calendar_es","minDate","theme","accentColor","floatingNav","chevron","headerColor","selectionColor","textColor","todayColor","weekdayColor","MapWithBubbles","CardDeck","overflowX","paddingBottom","paddingTop","components_HorizontalAvatarList","Card_AnnouncementCard","supportTicket","components_SupportTicket","Card_TodosCard","iconWidgetsData","MdThumbsUpDown","MdLanguage","MdLightbulbOutline","MdPlayCircleOutline","MdRadio","MdSnooze","MdMailOutline","numberWidgetsData","WidgetPage","App","BrowserRouter","basename","split","pop","components_GAListener","Switch","Layout_LayoutRoute","path","Redirect","componentQueries","ReactDOM","src_App","getElementById"],"mappings":"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","file":"static/js/main.a098b00c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/background_1920-2.c54eef50.jpg\";","module.exports = __webpack_public_path__ + \"static/media/background_1920-11.b7f68e8a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/background_1920-18.acfe7046.jpg\";","module.exports = __webpack_public_path__ + \"static/media/background_640-1.1420d15b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/background_640-3.55e47e98.jpg\";","module.exports = __webpack_public_path__ + \"static/media/background_1920-5.1d98ff2e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/background_1920-6.1e0eb550.jpg\";","module.exports = __webpack_public_path__ + \"static/media/background_1920-7.abf47fc1.png\";","module.exports = __webpack_public_path__ + \"static/media/background_1920-19.22fc19f2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/product_640-1.a9a0ec64.jpg\";","module.exports = __webpack_public_path__ + \"static/media/product_640-2.da0b0457.jpg\";","module.exports = __webpack_public_path__ + \"static/media/product_640-3.64ed27c9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/product_640-4.2110d8cd.jpg\";","module.exports = __webpack_public_path__ + \"static/media/product_640-5.bf8840bd.jpg\";","module.exports = __webpack_public_path__ + \"static/media/product_640-6.f9249755.jpg\";","module.exports = __webpack_public_path__ + \"static/media/100_7.1dce100f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/100_8.a4be0bbf.jpg\";","module.exports = __webpack_public_path__ + \"static/media/100_9.798c02eb.jpg\";","module.exports = __webpack_public_path__ + \"static/media/100_10.56d054ff.jpg\";","module.exports = __webpack_public_path__ + \"static/media/100_11.336faadc.jpg\";","module.exports = __webpack_public_path__ + \"static/media/100_12.1e0889af.jpg\";","module.exports = __webpack_public_path__ + \"static/media/100_13.63265e92.jpg\";","module.exports = __webpack_public_path__ + \"static/media/100_14.595b8cbd.jpg\";","import logo200Image from 'assets/img/logo/logo_200.png';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Button, Form, FormGroup, Input, Label } from 'reactstrap';\n\nclass AuthForm extends React.Component {\n  get isLogin() {\n    return this.props.authState === STATE_LOGIN;\n  }\n\n  get isSignup() {\n    return this.props.authState === STATE_SIGNUP;\n  }\n\n  changeAuthState = authState => event => {\n    event.preventDefault();\n\n    this.props.onChangeAuthState(authState);\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n  };\n\n  renderButtonText() {\n    const { buttonText } = this.props;\n\n    if (!buttonText && this.isLogin) {\n      return 'Login';\n    }\n\n    if (!buttonText && this.isSignup) {\n      return 'Signup';\n    }\n\n    return buttonText;\n  }\n\n  render() {\n    const {\n      showLogo,\n      usernameLabel,\n      usernameInputProps,\n      passwordLabel,\n      passwordInputProps,\n      confirmPasswordLabel,\n      confirmPasswordInputProps,\n      children,\n      onLogoClick,\n    } = this.props;\n\n    return (\n      <Form onSubmit={this.handleSubmit}>\n        {showLogo && (\n          <div className=\"text-center pb-4\">\n            <img\n              src={logo200Image}\n              className=\"rounded\"\n              style={{ width: 60, height: 60, cursor: 'pointer' }}\n              alt=\"logo\"\n              onClick={onLogoClick}\n            />\n          </div>\n        )}\n        <FormGroup>\n          <Label for={usernameLabel}>{usernameLabel}</Label>\n          <Input {...usernameInputProps} />\n        </FormGroup>\n        <FormGroup>\n          <Label for={passwordLabel}>{passwordLabel}</Label>\n          <Input {...passwordInputProps} />\n        </FormGroup>\n        {this.isSignup && (\n          <FormGroup>\n            <Label for={confirmPasswordLabel}>{confirmPasswordLabel}</Label>\n            <Input {...confirmPasswordInputProps} />\n          </FormGroup>\n        )}\n        <FormGroup check>\n          <Label check>\n            <Input type=\"checkbox\" />{' '}\n            {this.isSignup ? 'Agree the terms and policy' : 'Remember me'}\n          </Label>\n        </FormGroup>\n        <hr />\n        <Button\n          size=\"lg\"\n          className=\"bg-gradient-theme-left border-0\"\n          block\n          onClick={this.handleSubmit}>\n          {this.renderButtonText()}\n        </Button>\n\n        <div className=\"text-center pt-1\">\n          <h6>or</h6>\n          <h6>\n            {this.isSignup ? (\n              <a href=\"#login\" onClick={this.changeAuthState(STATE_LOGIN)}>\n                Login\n              </a>\n            ) : (\n              <a href=\"#signup\" onClick={this.changeAuthState(STATE_SIGNUP)}>\n                Signup\n              </a>\n            )}\n          </h6>\n        </div>\n\n        {children}\n      </Form>\n    );\n  }\n}\n\nexport const STATE_LOGIN = 'LOGIN';\nexport const STATE_SIGNUP = 'SIGNUP';\n\nAuthForm.propTypes = {\n  authState: PropTypes.oneOf([STATE_LOGIN, STATE_SIGNUP]).isRequired,\n  showLogo: PropTypes.bool,\n  usernameLabel: PropTypes.string,\n  usernameInputProps: PropTypes.object,\n  passwordLabel: PropTypes.string,\n  passwordInputProps: PropTypes.object,\n  confirmPasswordLabel: PropTypes.string,\n  confirmPasswordInputProps: PropTypes.object,\n  onLogoClick: PropTypes.func,\n};\n\nAuthForm.defaultProps = {\n  authState: 'LOGIN',\n  showLogo: true,\n  usernameLabel: 'Email',\n  usernameInputProps: {\n    type: 'email',\n    placeholder: 'your@email.com',\n  },\n  passwordLabel: 'Password',\n  passwordInputProps: {\n    type: 'password',\n    placeholder: 'your password',\n  },\n  confirmPasswordLabel: 'Confirm Password',\n  confirmPasswordInputProps: {\n    type: 'password',\n    placeholder: 'confirm your password',\n  },\n  onLogoClick: () => {},\n};\n\nexport default AuthForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport ReactGA from 'react-ga';\n\nconst hasGAId = !!process.env.REACT_APP_GOOGLE_ANALYTICS;\n\nif (hasGAId) {\n  ReactGA.initialize(process.env.REACT_APP_GOOGLE_ANALYTICS);\n}\n\nclass GAListener extends React.Component {\n  static contextTypes = {\n    router: PropTypes.object,\n  };\n\n  componentDidMount() {\n    if (hasGAId) {\n      this.sendPageView(this.context.router.history.location);\n      this.context.router.history.listen(this.sendPageView);\n    }\n  }\n\n  sendPageView(location) {\n    ReactGA.set({ page: location.pathname });\n    ReactGA.pageview(location.pathname);\n  }\n\n  render() {\n    return this.props.children;\n  }\n}\n\nexport default GAListener;\n","import classNames from 'classnames';\n\nexport const createBEM = namespace => {\n  return {\n    create: blockName => {\n      let block = blockName;\n\n      if (typeof namespace === 'string') {\n        block = `${namespace}-${blockName}`;\n      }\n\n      return {\n        b: (...more) => {\n          return classNames(block, more);\n        },\n        e: (className, ...more) => {\n          return classNames(`${block}__${className}`, more);\n        },\n        m: (className, ...more) => {\n          return classNames(`${block}--${className}`, more);\n        },\n      };\n    },\n  };\n};\n\nexport const bemNames = createBEM('cr');\n\nexport default bemNames;\n","import React from 'react';\n\nimport bn from 'utils/bemnames';\n\nimport { Container } from 'reactstrap';\n\nconst bem = bn.create('content');\n\nconst Content = ({ tag: Tag, className, ...restProps }) => {\n  const classes = bem.b(className);\n\n  return <Tag className={classes} {...restProps} />;\n};\n\nContent.defaultProps = {\n  tag: Container,\n};\n\nexport default Content;\n","import React from 'react';\n\nconst SourceLink = props => {\n  /* eslint-disable jsx-a11y/anchor-has-content */\n  return (\n    <a href={ /* process.env.PUBLIC_URL */ \"http://www.kloh.in\"} target=\"_blank\" rel=\"noopener noreferrer\" {...props} />\n  );\n};\n\nexport default SourceLink;\n","import React from 'react';\n\nimport { Navbar, Nav, NavItem } from 'reactstrap';\n\nimport SourceLink from 'components/SourceLink';\n\nconst Footer = () => {\n  return (\n    <Navbar>\n      <Nav navbar>\n        <NavItem>\n          2018 Reduction theme, source on <SourceLink>Github</SourceLink>\n        </NavItem>\n      </Nav>\n    </Navbar>\n  );\n};\n\nexport default Footer;\n","import PropTypes from 'prop-types';\n\nexport default {\n  ...PropTypes,\n  ID: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  component: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n  date: PropTypes.oneOfType([PropTypes.instanceOf(Date), PropTypes.string]),\n};\n","import React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nimport classNames from 'classnames';\n\nimport userImage from 'assets/img/users/100_4.jpg';\n\nconst Avatar = ({\n  rounded,\n  circle,\n  src,\n  size,\n  tag: Tag,\n  className,\n  style,\n  ...restProps\n}) => {\n  const classes = classNames({ 'rounded-circle': circle, rounded }, className);\n  return (\n    <Tag\n      src={src}\n      style={{ width: size, height: size, ...style }}\n      className={classes}\n      {...restProps}\n    />\n  );\n};\n\nAvatar.propTypes = {\n  tag: PropTypes.component,\n  rounded: PropTypes.bool,\n  circle: PropTypes.bool,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  src: PropTypes.string,\n  style: PropTypes.object,\n};\n\nAvatar.defaultProps = {\n  tag: 'img',\n  rounded: false,\n  circle: true,\n  size: 40,\n  src: userImage,\n  style: {},\n};\n\nexport default Avatar;\n","import React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nimport classNames from 'classnames';\n\nimport { Card, CardTitle, CardSubtitle, CardText, CardBody } from 'reactstrap';\n\nimport Avatar from '../Avatar';\n\nconst UserCard = ({\n  avatar,\n  avatarSize,\n  title,\n  subtitle,\n  text,\n  children,\n  className,\n  ...restProps\n}) => {\n  const classes = classNames('bg-gradient-theme', className);\n\n  return (\n    <Card inverse className={classes} {...restProps}>\n      <CardBody className=\"d-flex justify-content-center align-items-center flex-column\">\n        <Avatar src={avatar} size={avatarSize} className=\"mb-2\" />\n        <CardTitle>{title}</CardTitle>\n        <CardSubtitle>{subtitle}</CardSubtitle>\n        <CardText>\n          <small>{text}</small>\n        </CardText>\n      </CardBody>\n      {children}\n    </Card>\n  );\n};\n\nUserCard.propTypes = {\n  avatar: PropTypes.string,\n  avatarSize: PropTypes.number,\n  title: PropTypes.string,\n  subtitle: PropTypes.string,\n  text: PropTypes.string,\n  className: PropTypes.string,\n};\n\nUserCard.defaultProps = {\n  avatarSize: 80,\n};\n\nexport default UserCard;\n","import React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nimport { Card, CardHeader, CardBody, CardText, Button } from 'reactstrap';\n\nimport Avatar from 'components/Avatar';\n\nimport classNames from 'classnames';\n\nconst AnnouncementCard = ({\n  color,\n  header,\n  avatar,\n  avatarSize,\n  name,\n  date,\n  text,\n  className,\n  buttonProps,\n  ...restProps\n}) => {\n  const bgColor = `bg-${color}`;\n  const classes = classNames(bgColor, className);\n\n  return (\n    <Card inverse className={classes} {...restProps}>\n      {header && typeof header === 'string' ? (\n        <CardHeader className={bgColor}>{header}</CardHeader>\n      ) : (\n        header\n      )}\n      <CardBody className=\"d-flex flex-wrap flex-column align-items-center justify-content-center\">\n        <Avatar size={avatarSize} src={avatar} />\n        <CardText className=\"text-center\">\n          <strong className=\"d-block\">{name}</strong>\n          <small className=\"text-muted\">{date}</small>\n        </CardText>\n        <CardText className=\"text-center\">{text}</CardText>\n\n        <Button color=\"primary\" {...buttonProps} />\n      </CardBody>\n    </Card>\n  );\n};\n\nAnnouncementCard.propTypes = {\n  color: PropTypes.string,\n  header: PropTypes.node,\n  avatar: PropTypes.string,\n  avatarSize: PropTypes.number,\n  name: PropTypes.string,\n  date: PropTypes.date,\n  className: PropTypes.string,\n  children: PropTypes.element,\n};\n\nAnnouncementCard.defaultProps = {\n  color: 'gradient-secondary',\n  avatarSize: 60,\n};\n\nexport default AnnouncementCard;\n","import React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nimport {\n  ListGroup,\n  ListGroupItem,\n  FormGroup,\n  Label,\n  Input,\n  Button,\n} from 'reactstrap';\n\nexport const propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.ID,\n      title: PropTypes.string,\n      done: PropTypes.bool,\n    })\n  ),\n};\n\nconst Todos = ({ todos, ...restProps }) => {\n  return (\n    <ListGroup flush {...restProps}>\n      {todos.map(({ id, title, done } = {}) => (\n        <ListGroupItem key={id} className=\"border-0\">\n          <FormGroup check>\n            <Label check>\n              <Input type=\"checkbox\" checked={done} readOnly />\n              {done ? <strike>{title}</strike> : <span>{title}</span>}\n            </Label>\n          </FormGroup>\n        </ListGroupItem>\n      ))}\n      <Button block>Add</Button>\n    </ListGroup>\n  );\n};\n\nTodos.propTypes = propTypes;\n\nTodos.defaultProps = {\n  todos: [],\n};\n\nexport default Todos;\n","import React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nimport { Card, CardImg, CardImgOverlay, CardTitle, CardText } from 'reactstrap';\n\nimport Todos, { propTypes as TodosPropTypes } from 'components/Todos';\n\nimport backgroundImage from 'assets/img/bg/background_1920-2.jpg';\n\nconst TodosCard = ({ image, title, subtitle, todos, ...restProps }) => {\n  return (\n    <Card {...restProps}>\n      <div className=\"position-relative\">\n        <CardImg src={image} />\n        <CardImgOverlay className=\"bg-dark\" style={{ opacity: 0.2 }}>\n          <CardTitle className=\"text-white\">{title}</CardTitle>\n          <CardText className=\"text-white\">{subtitle}</CardText>\n        </CardImgOverlay>\n      </div>\n      <Todos todos={todos} />\n    </Card>\n  );\n};\n\nTodosCard.propTypes = {\n  image: PropTypes.string,\n  title: PropTypes.string,\n  subtitle: PropTypes.string,\n  todos: TodosPropTypes.todos,\n};\n\nTodosCard.defaultProps = {\n  image: backgroundImage,\n  title: 'Tasks',\n  subtitle: 'Due soon...',\n};\n\nexport default TodosCard;\n","import React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nimport { Media } from 'reactstrap';\n\nimport Avatar from 'components/Avatar';\n\nconst Notifications = ({ notificationsData }) => {\n  return (\n    notificationsData &&\n    notificationsData.length &&\n    notificationsData.map(({ id, avatar, message, date }) => (\n      <Media key={id} className=\"pb-2\">\n        <Media left className=\"align-self-center pr-3\">\n          <Avatar tag={Media} object src={avatar} alt=\"Avatar\" />\n        </Media>\n        <Media body middle className=\"align-self-center\">\n          {message}\n        </Media>\n        <Media right className=\"align-self-center\">\n          <small className=\"text-muted\">{date}</small>\n        </Media>\n      </Media>\n    ))\n  );\n};\n\nNotifications.propTypes = {\n  notificationsData: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.ID,\n      avatar: PropTypes.string,\n      message: PropTypes.node,\n      date: PropTypes.date,\n    })\n  ),\n};\n\nNotifications.defaultProps = {\n  notificationsData: [],\n};\n\nexport default Notifications;\n","import React from 'react';\nimport { MdSearch } from 'react-icons/md';\nimport { Form, Input } from 'reactstrap';\n\nconst SearchInput = () => {\n  return (\n    <Form inline className=\"cr-search-form\" onSubmit={e => e.preventDefault()}>\n      <MdSearch\n        size=\"20\"\n        className=\"cr-search-form__icon-search text-secondary\"\n      />\n      <Input\n        type=\"search\"\n        className=\"cr-search-form__input\"\n        placeholder=\"Search...\"\n      />\n    </Form>\n  );\n};\n\nexport default SearchInput;\n","import user1Image from 'assets/img/users/100_1.jpg';\nimport user2Image from 'assets/img/users/100_2.jpg';\nimport user3Image from 'assets/img/users/100_3.jpg';\nimport user4Image from 'assets/img/users/100_4.jpg';\nimport user5Image from 'assets/img/users/100_5.jpg';\n\nexport const notificationsData = [\n  {\n    id: 1,\n    avatar: user1Image,\n    message: 'David sent you a message',\n    date: '3 min ago',\n  },\n  {\n    id: 2,\n    avatar: user2Image,\n    message: 'Jane mentioned you here',\n    date: '1 hour ago',\n  },\n  {\n    id: 3,\n    avatar: user3Image,\n    message: 'Clark sent a pull request',\n    date: 'yesterday',\n  },\n  {\n    id: 4,\n    avatar: user4Image,\n    message: 'Alicia signed up',\n    date: '3 days ago',\n  },\n  {\n    id: 5,\n    avatar: user5Image,\n    message: 'Keith shared this article',\n    date: 'a week ago',\n  },\n];\n","import React from 'react';\n\nimport classNames from 'classnames';\n\nimport { Badge } from 'reactstrap';\n\nconst positionMap = {\n  'top-right': {\n    top: -3,\n    right: -3,\n  },\n  'top-left': {\n    top: -3,\n    left: -3,\n  },\n  'bottom-left': {\n    bottom: -3,\n    left: -3,\n  },\n  'bottom-right': {\n    bottom: -3,\n    right: -3,\n  },\n};\n\nconst sizeMap = {\n  xs: {\n    width: 10,\n    height: 10,\n  },\n  sm: {\n    width: 15,\n    height: 15,\n  },\n  md: {\n    width: 20,\n    height: 20,\n  },\n  lg: {\n    width: 25,\n    height: 25,\n  },\n  xl: {\n    width: 30,\n    height: 30,\n  },\n};\n\nconst withBadge = ({\n  position = 'bottom-right',\n  size = 'sm',\n  style = {},\n  className,\n  ...restBadgeProps\n} = {}) => WrappedComponent => ({ tag: Tag = 'div', ...restProps }) => {\n  return (\n    <Tag className=\"d-inline-block position-relative\">\n      <WrappedComponent {...restProps} />\n      <Badge\n        className={classNames('position-absolute', className)}\n        style={{\n          ...positionMap[position],\n          ...sizeMap[size],\n          borderRadius: '50%',\n          border: '2px solid #fff',\n          ...style,\n        }}\n        {...restBadgeProps}\n      />\n    </Tag>\n  );\n};\n\nexport default withBadge;\n","import Avatar from 'components/Avatar';\nimport { UserCard } from 'components/Card';\nimport Notifications from 'components/Notifications';\nimport SearchInput from 'components/SearchInput';\nimport { notificationsData } from 'demos/header';\nimport withBadge from 'hocs/withBadge';\nimport React from 'react';\nimport {\n  MdClearAll,\n  MdExitToApp,\n  MdHelp,\n  MdInsertChart,\n  MdMessage,\n  MdNotificationsActive,\n  MdNotificationsNone,\n  MdPersonPin,\n  MdSettingsApplications,\n} from 'react-icons/md';\nimport {\n  Button,\n  ListGroup,\n  ListGroupItem,\n  // NavbarToggler,\n  Nav,\n  Navbar,\n  NavItem,\n  NavLink,\n  Popover,\n  PopoverBody,\n} from 'reactstrap';\nimport bn from 'utils/bemnames';\n\nconst bem = bn.create('header');\n\nconst MdNotificationsActiveWithBadge = withBadge({\n  size: 'md',\n  color: 'primary',\n  style: {\n    top: -10,\n    right: -10,\n    display: 'inline-flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  children: <small>5</small>,\n})(MdNotificationsActive);\n\nclass Header extends React.Component {\n  state = {\n    isOpenNotificationPopover: false,\n    isNotificationConfirmed: false,\n    isOpenUserCardPopover: false,\n  };\n\n  toggleNotificationPopover = () => {\n    this.setState({\n      isOpenNotificationPopover: !this.state.isOpenNotificationPopover,\n    });\n\n    if (!this.state.isNotificationConfirmed) {\n      this.setState({ isNotificationConfirmed: true });\n    }\n  };\n\n  toggleUserCardPopover = () => {\n    this.setState({\n      isOpenUserCardPopover: !this.state.isOpenUserCardPopover,\n    });\n  };\n\n  handleSidebarControlButton = event => {\n    event.preventDefault();\n    event.stopPropagation();\n\n    document.querySelector('.cr-sidebar').classList.toggle('cr-sidebar--open');\n  };\n\n  render() {\n    const { isNotificationConfirmed } = this.state;\n\n    return (\n      <Navbar light expand className={bem.b('bg-white')}>\n        <Nav navbar className=\"mr-2\">\n          <Button outline onClick={this.handleSidebarControlButton}>\n            <MdClearAll size={25} />\n          </Button>\n        </Nav>\n        <Nav navbar>\n          <SearchInput />\n        </Nav>\n\n        <Nav navbar className={bem.e('nav-right')}>\n          <NavItem className=\"d-inline-flex\">\n            <NavLink id=\"Popover1\" className=\"position-relative\">\n              {isNotificationConfirmed ? (\n                <MdNotificationsNone\n                  size={25}\n                  className=\"text-secondary can-click\"\n                  onClick={this.toggleNotificationPopover}\n                />\n              ) : (\n                <MdNotificationsActiveWithBadge\n                  size={25}\n                  className=\"text-secondary can-click animated swing infinite\"\n                  onClick={this.toggleNotificationPopover}\n                />\n              )}\n            </NavLink>\n            <Popover\n              placement=\"bottom\"\n              isOpen={this.state.isOpenNotificationPopover}\n              toggle={this.toggleNotificationPopover}\n              target=\"Popover1\"\n            >\n              <PopoverBody>\n                <Notifications notificationsData={notificationsData} />\n              </PopoverBody>\n            </Popover>\n          </NavItem>\n\n          <NavItem>\n            <NavLink id=\"Popover2\">\n              <Avatar\n                onClick={this.toggleUserCardPopover}\n                className=\"can-click\"\n              />\n            </NavLink>\n            <Popover\n              placement=\"bottom-end\"\n              isOpen={this.state.isOpenUserCardPopover}\n              toggle={this.toggleUserCardPopover}\n              target=\"Popover2\"\n              className=\"p-0 border-0\"\n              style={{ minWidth: 250 }}\n            >\n              <PopoverBody className=\"p-0 border-light\">\n                <UserCard\n                  title=\"Jane\"\n                  subtitle=\"jane@jane.com\"\n                  text=\"Last updated 3 mins ago\"\n                  className=\"border-light\"\n                >\n                  <ListGroup flush>\n                    <ListGroupItem tag=\"button\" action className=\"border-light\">\n                      <MdPersonPin /> Profile\n                    </ListGroupItem>\n                    <ListGroupItem tag=\"button\" action className=\"border-light\">\n                      <MdInsertChart /> Stats\n                    </ListGroupItem>\n                    <ListGroupItem tag=\"button\" action className=\"border-light\">\n                      <MdMessage /> Messages\n                    </ListGroupItem>\n                    <ListGroupItem tag=\"button\" action className=\"border-light\">\n                      <MdSettingsApplications /> Settings\n                    </ListGroupItem>\n                    <ListGroupItem tag=\"button\" action className=\"border-light\">\n                      <MdHelp /> Help\n                    </ListGroupItem>\n                    <ListGroupItem tag=\"button\" action className=\"border-light\">\n                      <MdExitToApp /> Signout\n                    </ListGroupItem>\n                  </ListGroup>\n                </UserCard>\n              </PopoverBody>\n            </Popover>\n          </NavItem>\n        </Nav>\n      </Navbar>\n    );\n  }\n}\n\nexport default Header;\n","import React from 'react';\nimport { Route } from 'react-router-dom';\n\nconst LayoutRoute = ({ component: Component, layout: Layout, ...rest }) => (\n  <Route\n    {...rest}\n    render={props => (\n      <Layout>\n        <Component {...props} />\n      </Layout>\n    )}\n  />\n);\n\nexport default LayoutRoute;\n","export const NOTIFICATION_SYSTEM_STYLE = {\n  NotificationItem: {\n    DefaultStyle: {\n      display: 'flex',\n      justifyContent: 'space-between',\n      alignItems: 'center',\n\n      borderRadius: '4px',\n      fontSize: '14px',\n    },\n\n    success: {\n      borderTop: 0,\n      backgroundColor: '#45b649',\n      WebkitBoxShadow: 0,\n      MozBoxShadow: 0,\n      boxShadow: 0,\n    },\n\n    error: {\n      borderTop: 0,\n      backgroundColor: '#f85032',\n      WebkitBoxShadow: 0,\n      MozBoxShadow: 0,\n      boxShadow: 0,\n    },\n\n    warning: {\n      borderTop: 0,\n      backgroundColor: '#ffd700',\n      WebkitBoxShadow: 0,\n      MozBoxShadow: 0,\n      boxShadow: 0,\n    },\n\n    info: {\n      borderTop: 0,\n      background: 'linear-gradient(to right, #37D5B3, #2C80BD)',\n      WebkitBoxShadow: 0,\n      MozBoxShadow: 0,\n      boxShadow: 0,\n    },\n  },\n\n  Title: {\n    DefaultStyle: {\n      margin: 0,\n      padding: 0,\n      paddingRight: 5,\n      color: '#fff',\n      display: 'inline-flex',\n      fontSize: 20,\n      fontWeight: 'bold',\n      // left: '15px',\n      // position: 'absolute',\n      // top: '50%',\n    },\n  },\n\n  MessageWrapper: {\n    DefaultStyle: {\n      display: 'block',\n      color: '#fff',\n      width: '100%',\n    },\n  },\n\n  Dismiss: {\n    DefaultStyle: {\n      display: 'inline-flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      fontFamily: 'inherit',\n      fontSize: 20,\n      color: '#f2f2f2',\n      position: 'relative',\n      margin: 0,\n      padding: 0,\n      background: 'none',\n      borderRadius: 0,\n      opacity: 1,\n      width: 20,\n      height: 20,\n      textAlign: 'initial',\n      float: 'none',\n      top: 'unset',\n      right: 'unset',\n      lineHeight: 'inherit',\n    },\n  },\n\n  Action: {\n    DefaultStyle: {\n      background: '#fff',\n      borderRadius: '2px',\n      padding: '6px 20px',\n      fontWeight: 'bold',\n      margin: '10px 0 0 0',\n      border: 0,\n    },\n\n    success: {\n      backgroundColor: '#45b649',\n      color: '#fff',\n    },\n\n    error: {\n      backgroundColor: '#f85032',\n      color: '#fff',\n    },\n\n    warning: {\n      backgroundColor: '#ffd700',\n      color: '#fff',\n    },\n\n    info: {\n      backgroundColor: '#00c9ff',\n      color: '#fff',\n    },\n  },\n\n  ActionWrapper: {\n    DefaultStyle: {\n      margin: 0,\n      padding: 0,\n    },\n  },\n};\n","import { Content, Footer, Header, Sidebar } from 'components/Layout';\nimport React from 'react';\nimport {\n  MdImportantDevices,\n  // MdCardGiftcard,\n  MdLoyalty,\n} from 'react-icons/md';\nimport NotificationSystem from 'react-notification-system';\nimport { NOTIFICATION_SYSTEM_STYLE } from 'utils/constants';\n\nclass MainLayout extends React.Component {\n  static isSidebarOpen() {\n    return document\n      .querySelector('.cr-sidebar')\n      .classList.contains('cr-sidebar--open');\n  }\n\n  componentWillReceiveProps({ breakpoint }) {\n    if (breakpoint !== this.props.breakpoint) {\n      this.checkBreakpoint(breakpoint);\n    }\n  }\n\n  componentDidMount() {\n    this.checkBreakpoint(this.props.breakpoint);\n\n    setTimeout(() => {\n      if (!this.notificationSystem) {\n        return;\n      }\n\n      this.notificationSystem.addNotification({\n        title: <MdImportantDevices />,\n        message: 'Welome to Kloh Console!',\n        level: 'info',\n      });\n    }, 1500);\n  }\n\n  // close sidebar when\n  handleContentClick = event => {\n    // close sidebar if sidebar is open and screen size is less than `md`\n    if (\n      MainLayout.isSidebarOpen() &&\n      (this.props.breakpoint === 'xs' ||\n        this.props.breakpoint === 'sm' ||\n        this.props.breakpoint === 'md')\n    ) {\n      this.openSidebar('close');\n    }\n  };\n\n  checkBreakpoint(breakpoint) {\n    switch (breakpoint) {\n      case 'xs':\n      case 'sm':\n      case 'md':\n        return this.openSidebar('close');\n\n      case 'lg':\n      case 'xl':\n      default:\n        return this.openSidebar('open');\n    }\n  }\n\n  openSidebar(openOrClose) {\n    if (openOrClose === 'open') {\n      return document\n        .querySelector('.cr-sidebar')\n        .classList.add('cr-sidebar--open');\n    }\n    document.querySelector('.cr-sidebar').classList.remove('cr-sidebar--open');\n  }\n\n  render() {\n    const { children } = this.props;\n    return (\n      <main className=\"cr-app bg-light\">\n        <Sidebar />\n        <Content fluid onClick={this.handleContentClick}>\n          <Header />\n          {children}\n          <Footer />\n        </Content>\n\n        <NotificationSystem\n          dismissible={false}\n          ref={notificationSystem =>\n            (this.notificationSystem = notificationSystem)\n          }\n          style={NOTIFICATION_SYSTEM_STYLE}\n        />\n      </main>\n    );\n  }\n}\n\nexport default MainLayout;\n","import logo200Image from 'assets/img/logo/logo_200.png';\n// import sidebarBgImage from 'assets/img/sidebar/sidebar-4.jpg';\nimport SourceLink from 'components/SourceLink';\nimport React from 'react';\n// import { FaGithub } from 'react-icons/fa';\nimport {\n  // MdExtension,\n  MdKeyboardArrowDown,\n  MdPages,\n  MdDashboard,\n  // MdSend,\n  MdClass,\n  MdFace,\n  MdPlace,\n} from 'react-icons/md';\nimport { NavLink } from 'react-router-dom';\nimport {\n  // UncontrolledTooltip,\n  Collapse,\n  Nav,\n  Navbar,\n  NavItem,\n  NavLink as BSNavLink,\n} from 'reactstrap';\nimport bn from 'utils/bemnames';\n\n// const sidebarBackground = {\n//   backgroundImage: `url(\"${sidebarBgImage}\")`,\n//   backgroundSize: 'cover',\n//   backgroundRepeat: 'no-repeat',\n// };\n\n// const navComponents = [\n//   { to: '/buttons', name: 'buttons', exact: false, Icon: MdRadioButtonChecked },\n//   {\n//     to: '/button-groups',\n//     name: 'button groups',\n//     exact: false,\n//     Icon: MdGroupWork,\n//   },\n//   { to: '/forms', name: 'forms', exact: false, Icon: MdChromeReaderMode },\n//   { to: '/input-groups', name: 'input groups', exact: false, Icon: MdViewList },\n//   {\n//     to: '/dropdowns',\n//     name: 'dropdowns',\n//     exact: false,\n//     Icon: MdArrowDropDownCircle,\n//   },\n//   { to: '/badges', name: 'badges', exact: false, Icon: MdStar },\n//   { to: '/alerts', name: 'alerts', exact: false, Icon: MdNotificationsActive },\n//   { to: '/progress', name: 'progress', exact: false, Icon: MdBrush },\n//   { to: '/modals', name: 'modals', exact: false, Icon: MdViewDay },\n// ];\n\n// const navContents = [\n//   { to: '/typography', name: 'typography', exact: false, Icon: MdTextFields },\n//   { to: '/tables', name: 'tables', exact: false, Icon: MdBorderAll },\n// ];\n\nconst pageContents = [\n//   { to: '/login', name: 'login / signup', exact: false, Icon: MdAccountCircle },\n  {\n    to: '/login-modal',\n    name: 'login modal',\n    exact: false,\n    Icon: MdClass,\n  },\n];\n\nconst navItems = [\n  { to: '/', name: 'dashboard', exact: true, Icon: MdDashboard },\n  { to: '/classes', name: 'classes', exact: false, Icon: MdClass },\n  { to: '/artists', name: 'artists', exact: false, Icon: MdFace },\n  { to: '/venues', name: 'venues', exact: false, Icon: MdPlace },\n];\n\nconst bem = bn.create('sidebar');\n\nclass Sidebar extends React.Component {\n  state = {\n    isOpenComponents: true,\n    isOpenContents: true,\n    isOpenPages: true,\n  };\n\n  handleClick = name => () => {\n    this.setState(prevState => {\n      const isOpen = prevState[`isOpen${name}`];\n\n      return {\n        [`isOpen${name}`]: !isOpen,\n      };\n    });\n  };\n\n  render() {\n    return (\n      <aside className={bem.b()} /*data-image={sidebarBgImage}*/>\n        {/* <div className={bem.e('background')} style={sidebarBackground} /> */}\n        <div className={bem.e('content')}>\n          <Navbar>\n            <SourceLink className=\"navbar-brand d-flex\">\n              <img\n                src={logo200Image}\n                width=\"40\"\n                height=\"30\"\n                className=\"pr-2\"\n                alt=\"\"\n              />\n              <span className=\"text-white\">\n                Kloh \n                {/* <FaGithub /> */}\n              </span>\n            </SourceLink>\n          </Navbar>\n          <Nav vertical>\n            {navItems.map(({ to, name, exact, Icon }, index) => (\n              <NavItem key={index} className={bem.e('nav-item')}>\n                <BSNavLink\n                  id={`navItem-${name}-${index}`}\n                  className=\"text-uppercase\"\n                  tag={NavLink}\n                  to={to}\n                  activeClassName=\"active\"\n                  exact={exact}\n                >\n                  <Icon className={bem.e('nav-item-icon')} />\n                  <span className=\"\">{name}</span>\n                </BSNavLink>\n              </NavItem>\n            ))}\n\n            {/* <NavItem\n              className={bem.e('nav-item')}\n              onClick={this.handleClick('Components')}\n            >\n              <BSNavLink className={bem.e('nav-item-collapse')}>\n                <div className=\"d-flex\">\n                  <MdExtension className={bem.e('nav-item-icon')} />\n                  <span className=\" align-self-start\">Components</span>\n                </div>\n                <MdKeyboardArrowDown\n                  className={bem.e('nav-item-icon')}\n                  style={{\n                    padding: 0,\n                    transform: this.state.isOpenComponents\n                      ? 'rotate(0deg)'\n                      : 'rotate(-90deg)',\n                    transitionDuration: '0.3s',\n                    transitionProperty: 'transform',\n                  }}\n                />\n              </BSNavLink>\n            </NavItem> */}\n            {/* <Collapse isOpen={this.state.isOpenComponents}>\n              {navComponents.map(({ to, name, exact, Icon }, index) => (\n                <NavItem key={index} className={bem.e('nav-item')}>\n                  <BSNavLink\n                    id={`navItem-${name}-${index}`}\n                    className=\"text-uppercase\"\n                    tag={NavLink}\n                    to={to}\n                    activeClassName=\"active\"\n                    exact={exact}\n                  >\n                    <Icon className={bem.e('nav-item-icon')} />\n                    <span className=\"\">{name}</span>\n                  </BSNavLink>\n                </NavItem>\n              ))}\n            </Collapse> */}\n\n            {/* <NavItem\n              className={bem.e('nav-item')}\n              onClick={this.handleClick('Contents')}\n            >\n              <BSNavLink className={bem.e('nav-item-collapse')}>\n                <div className=\"d-flex\">\n                  <MdSend className={bem.e('nav-item-icon')} />\n                  <span className=\"\">Contents</span>\n                </div>\n                <MdKeyboardArrowDown\n                  className={bem.e('nav-item-icon')}\n                  style={{\n                    padding: 0,\n                    transform: this.state.isOpenContents\n                      ? 'rotate(0deg)'\n                      : 'rotate(-90deg)',\n                    transitionDuration: '0.3s',\n                    transitionProperty: 'transform',\n                  }}\n                />\n              </BSNavLink>\n            </NavItem> */}\n            {/* <Collapse isOpen={this.state.isOpenContents}>\n              {navContents.map(({ to, name, exact, Icon }, index) => (\n                <NavItem key={index} className={bem.e('nav-item')}>\n                  <BSNavLink\n                    id={`navItem-${name}-${index}`}\n                    className=\"text-uppercase\"\n                    tag={NavLink}\n                    to={to}\n                    activeClassName=\"active\"\n                    exact={exact}\n                  >\n                    <Icon className={bem.e('nav-item-icon')} />\n                    <span className=\"\">{name}</span>\n                  </BSNavLink>\n                </NavItem>\n              ))}\n            </Collapse> */}\n\n            {/* <NavItem\n              className={bem.e('nav-item')}\n              onClick={this.handleClick('Pages')}\n            >\n              <BSNavLink className={bem.e('nav-item-collapse')}>\n                <div className=\"d-flex\">\n                  <MdPages className={bem.e('nav-item-icon')} />\n                  <span className=\"\">Pages</span>\n                </div>\n                <MdKeyboardArrowDown\n                  className={bem.e('nav-item-icon')}\n                  style={{\n                    padding: 0,\n                    transform: this.state.isOpenPages\n                      ? 'rotate(0deg)'\n                      : 'rotate(-90deg)',\n                    transitionDuration: '0.3s',\n                    transitionProperty: 'transform',\n                  }}\n                />\n              </BSNavLink>\n            </NavItem>}\n            <Collapse isOpen={this.state.isOpenPages}>\n              {pageContents.map(({ to, name, exact, Icon }, index) => (\n                <NavItem key={index} className={bem.e('nav-item')}>\n                  <BSNavLink\n                    id={`navItem-${name}-${index}`}\n                    className=\"text-uppercase\"\n                    tag={NavLink}\n                    to={to}\n                    activeClassName=\"active\"\n                    exact={exact}\n                  >\n                    <Icon className={bem.e('nav-item-icon')} />\n                    <span className=\"\">{name}</span>\n                  </BSNavLink>\n                </NavItem>\n              ))}\n            </Collapse> */}\n          </Nav>\n        </div>\n      </aside>\n    );\n  }\n}\n\nexport default Sidebar;\n","import classNames from 'classnames';\nimport React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nconst tagMap = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  'display-1': 'h1',\n  'display-2': 'h1',\n  'display-3': 'h1',\n  'display-4': 'h1',\n  p: 'p',\n  lead: 'p',\n  blockquote: 'blockquote',\n};\n\nconst types = Object.keys(tagMap);\n\nconst Typography = ({ tag: Tag, className, type, ...restProps }) => {\n  const classes = classNames({ [type]: !!type }, className);\n  let TypoComp;\n\n  if (Tag) {\n    TypoComp = Tag;\n  } else if (!Tag && tagMap[type]) {\n    TypoComp = tagMap[type];\n  } else {\n    TypoComp = 'p';\n  }\n\n  return <TypoComp {...restProps} className={classes} />;\n};\n\nTypography.propTypes = {\n  tag: PropTypes.component,\n  className: PropTypes.string,\n  type: PropTypes.oneOf(types),\n};\n\nTypography.defaultProps = {\n  type: 'p',\n};\n\nexport default Typography;\n","import React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nimport bn from 'utils/bemnames';\n\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\n\nimport Typography from './Typography';\n\nconst bem = bn.create('page');\n\nconst Page = ({\n  title,\n  breadcrumbs,\n  tag: Tag,\n  className,\n  children,\n  ...restProps\n}) => {\n  const classes = bem.b('px-3', className);\n\n  return (\n    <Tag className={classes} {...restProps}>\n      <div className={bem.e('header')}>\n        {title && typeof title === 'string' ? (\n          <Typography type=\"h1\" className={bem.e('title')}>\n            {title}\n          </Typography>\n        ) : (\n            title\n          )}\n        {breadcrumbs && (\n          <Breadcrumb className={bem.e('breadcrumb')}>\n            <BreadcrumbItem>Home</BreadcrumbItem>\n            {breadcrumbs.length &&\n              breadcrumbs.map(({ name, active }, index) => (\n                <BreadcrumbItem key={index} active={active}>\n                  {name}\n                </BreadcrumbItem>\n              ))}\n          </Breadcrumb>\n        )}\n      </div>\n      {children}\n    </Tag>\n  );\n};\n\nPage.propTypes = {\n  tag: PropTypes.component,\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  className: PropTypes.string,\n  children: PropTypes.node,\n  breadcrumbs: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      active: PropTypes.bool,\n    })\n  ),\n};\n\nPage.defaultProps = {\n  tag: 'div',\n  title: '',\n};\n\nexport default Page;\n","import AuthForm, { STATE_LOGIN } from 'components/AuthForm';\nimport Page from 'components/Page';\nimport React from 'react';\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardHeader,\n  Col,\n  Modal,\n  ModalBody,\n  Row,\n} from 'reactstrap';\n\nclass AuthModalPage extends React.Component {\n  state = {\n    show: false,\n    authState: STATE_LOGIN,\n  };\n\n  toggle = () => {\n    this.setState({\n      show: !this.state.show,\n    });\n  };\n\n  handleAuthState = authState => {\n    this.setState({\n      authState,\n    });\n  };\n\n  render() {\n    const externalCloseBtn = (\n      <button\n        className=\"close\"\n        style={{\n          position: 'absolute',\n          top: '15px',\n          right: '20px',\n          fontSize: '3rem',\n        }}\n        onClick={this.toggle}>\n        &times;\n      </button>\n    );\n\n    return (\n      <Page\n        title=\"Login Modal\"\n        breadcrumbs={[{ name: 'login modal', active: true }]}>\n        <Row>\n          <Col md=\"12\" sm=\"12\" xs=\"12\">\n            <Card>\n              <CardHeader>Login Modal Example</CardHeader>\n              <CardBody>\n                <Button color=\"danger\" onClick={this.toggle}>\n                  Click to Login\n                </Button>\n                <Modal\n                  isOpen={this.state.show}\n                  toggle={this.toggle}\n                  size=\"sm\"\n                  backdrop=\"static\"\n                  backdropClassName=\"modal-backdrop-light\"\n                  external={externalCloseBtn}\n                  centered>\n                  <ModalBody>\n                    <AuthForm\n                      authState={this.state.authState}\n                      onChangeAuthState={this.handleAuthState}\n                    />\n                  </ModalBody>\n                </Modal>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      </Page>\n    );\n  }\n}\n\nexport default AuthModalPage;\n","import AuthForm, { STATE_LOGIN } from 'components/AuthForm';\nimport React from 'react';\nimport { Card, Col, Row } from 'reactstrap';\n\nclass AuthPage extends React.Component {\n  handleAuthState = authState => {\n    if (authState === STATE_LOGIN) {\n      this.props.history.push('/login');\n    } else {\n      this.props.history.push('/signup');\n    }\n  };\n\n  handleLogoClick = () => {\n    this.props.history.push('/');\n  };\n\n  render() {\n    return (\n      <Row\n        style={{\n          height: '100vh',\n          justifyContent: 'center',\n          alignItems: 'center',\n        }}>\n        <Col md={6} lg={4}>\n          <Card body>\n            <AuthForm\n              authState={this.props.authState}\n              onChangeAuthState={this.handleAuthState}\n              onLogoClick={this.handleLogoClick}\n            />\n          </Card>\n        </Col>\n      </Row>\n    );\n  }\n}\n\nexport default AuthPage;\n","import React from 'react';\n\nimport {\n  Row,\n  Col,\n  Button,\n  ButtonGroup,\n  Card,\n  CardHeader,\n  CardSubtitle,\n  CardBody,\n  CardText,\n} from 'reactstrap';\n\nimport Page from 'components/Page';\n\nclass ButtonPage extends React.Component {\n  state = {\n    rSelected: null,\n    cSelected: [],\n  };\n\n  onCheckboxBtnClick(selected) {\n    const index = this.state.cSelected.indexOf(selected);\n    if (index < 0) {\n      this.state.cSelected.push(selected);\n    } else {\n      this.state.cSelected.splice(index, 1);\n    }\n    this.setState({ cSelected: [...this.state.cSelected] });\n  }\n\n  render() {\n    return (\n      <Page\n        className=\"ButtonPage\"\n        title=\"Buttons\"\n        breadcrumbs={[{ name: 'buttons', active: true }]}\n      >\n        <Row>\n          <Col md=\"6\" sm=\"12\" xs=\"12\">\n            <Card className=\"mb-3\">\n              <CardHeader>Buttons</CardHeader>\n              <CardBody>\n                <Button color=\"primary\">primary</Button>\n                <Button color=\"secondary\">secondary</Button>\n                <Button color=\"success\">success</Button>\n                <Button color=\"info\">info</Button>\n                <Button color=\"warning\">warning</Button>\n                <Button color=\"danger\">danger</Button>\n                <Button color=\"link\">link</Button>\n              </CardBody>\n            </Card>\n          </Col>\n\n          <Col md=\"6\" sm=\"12\" xs=\"12\">\n            <Card className=\"mb-3\">\n              <CardHeader>Outline Buttons</CardHeader>\n              <CardBody>\n                <Button outline color=\"primary\">\n                  primary\n                </Button>\n                <Button outline color=\"secondary\">\n                  secondary\n                </Button>\n                <Button outline color=\"success\">\n                  success\n                </Button>\n                <Button outline color=\"info\">\n                  info\n                </Button>\n                <Button outline color=\"warning\">\n                  warning\n                </Button>\n                <Button outline color=\"danger\">\n                  danger\n                </Button>\n                <Button outline color=\"link\">\n                  link\n                </Button>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n\n        <Row>\n          <Col>\n            <Card className=\"mb-3\">\n              <CardHeader>Different Button Sizes</CardHeader>\n              <CardBody>\n                <Button color=\"primary\" size=\"sm\">\n                  Small Button\n                </Button>\n                <Button color=\"secondary\" size=\"sm\">\n                  Small Button\n                </Button>\n                <Button color=\"success\" size=\"sm\">\n                  Small Button\n                </Button>\n                <Button color=\"info\" size=\"sm\">\n                  Small Button\n                </Button>\n                <Button color=\"warning\" size=\"sm\">\n                  Small Button\n                </Button>\n                <Button color=\"danger\" size=\"sm\">\n                  Small Button\n                </Button>\n                <Button color=\"link\" size=\"sm\">\n                  Small Button\n                </Button>\n              </CardBody>\n              <CardBody>\n                <Button color=\"primary\">Normal Button</Button>\n                <Button color=\"secondary\">Normal Button</Button>\n                <Button color=\"success\">Normal Button</Button>\n                <Button color=\"info\">Normal Button</Button>\n                <Button color=\"warning\">Normal Button</Button>\n                <Button color=\"danger\">Normal Button</Button>\n                <Button color=\"link\">Normal Button</Button>\n              </CardBody>\n              <CardBody>\n                <Button color=\"primary\" size=\"lg\">\n                  Large Button\n                </Button>\n                <Button color=\"secondary\" size=\"lg\">\n                  Large Button\n                </Button>\n                <Button color=\"success\" size=\"lg\">\n                  Large Button\n                </Button>\n                <Button color=\"info\" size=\"lg\">\n                  Large Button\n                </Button>\n                <Button color=\"warning\" size=\"lg\">\n                  Large Button\n                </Button>\n                <Button color=\"danger\" size=\"lg\">\n                  Large Button\n                </Button>\n                <Button color=\"link\" size=\"lg\">\n                  Large Button\n                </Button>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n\n        <Row>\n          <Col>\n            <Card className=\"mb-3\">\n              <CardHeader>Block Buttons</CardHeader>\n              <CardBody>\n                <Row>\n                  <Col>\n                    <Card body className=\"mb-3\">\n                      <Button color=\"primary\" size=\"sm\" block>\n                        Small Block Button\n                      </Button>\n                      <Button color=\"secondary\" size=\"sm\" block>\n                        Small Block Button\n                      </Button>\n                      <Button color=\"success\" size=\"sm\" block>\n                        Small Block Button\n                      </Button>\n                      <Button color=\"info\" size=\"sm\" block>\n                        Small Block Button\n                      </Button>\n                      <Button color=\"warning\" size=\"sm\" block>\n                        Small Block Button\n                      </Button>\n                      <Button color=\"danger\" size=\"sm\" block>\n                        Small Block Button\n                      </Button>\n                      <Button color=\"link\" size=\"sm\" block>\n                        Small Block Button\n                      </Button>\n                    </Card>\n                  </Col>\n                  <Col>\n                    <Card body className=\"mb-3\">\n                      <Button color=\"primary\" block>\n                        Normal Block Button\n                      </Button>\n                      <Button color=\"secondary\" block>\n                        Normal Block Button\n                      </Button>\n                      <Button color=\"success\" block>\n                        Normal Block Button\n                      </Button>\n                      <Button color=\"info\" block>\n                        Normal Block Button\n                      </Button>\n                      <Button color=\"warning\" block>\n                        Normal Block Button\n                      </Button>\n                      <Button color=\"danger\" block>\n                        Normal Block Button\n                      </Button>\n                      <Button color=\"link\" block>\n                        Normal Block Button\n                      </Button>\n                    </Card>\n                  </Col>\n                  <Col>\n                    <Card body>\n                      <Button color=\"primary\" size=\"lg\" block>\n                        Large Block Button\n                      </Button>\n                      <Button color=\"secondary\" size=\"lg\" block>\n                        Large Block Button\n                      </Button>\n                      <Button color=\"success\" size=\"lg\" block>\n                        Large Block Button\n                      </Button>\n                      <Button color=\"info\" size=\"lg\" block>\n                        Large Block Button\n                      </Button>\n                      <Button color=\"warning\" size=\"lg\" block>\n                        Large Block Button\n                      </Button>\n                      <Button color=\"danger\" size=\"lg\" block>\n                        Large Block Button\n                      </Button>\n                      <Button color=\"link\" size=\"lg\" block>\n                        Large Block Button\n                      </Button>\n                    </Card>\n                  </Col>\n                </Row>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n\n        <Row>\n          <Col>\n            <Card className=\"mb-3\">\n              <CardHeader>Button State</CardHeader>\n              <CardBody>\n                <Button color=\"primary\" active>\n                  primary active\n                </Button>\n                <Button color=\"secondary\" active>\n                  secondary active\n                </Button>\n                <Button color=\"success\" active>\n                  success active\n                </Button>\n                <Button color=\"info\" active>\n                  info active\n                </Button>\n                <Button color=\"warning\" active>\n                  warning active\n                </Button>\n                <Button color=\"danger\" active>\n                  danger active\n                </Button>\n                <Button color=\"link\" active>\n                  link active\n                </Button>\n              </CardBody>\n              <CardBody>\n                <Button color=\"primary\" disabled>\n                  primary disabled\n                </Button>\n                <Button color=\"secondary\" disabled>\n                  secondary disabled\n                </Button>\n                <Button color=\"success\" disabled>\n                  success disabled\n                </Button>\n                <Button color=\"info\" disabled>\n                  info disabled\n                </Button>\n                <Button color=\"warning\" disabled>\n                  warning disabled\n                </Button>\n                <Button color=\"danger\" disabled>\n                  danger disabled\n                </Button>\n                <Button color=\"link\" disabled>\n                  link active\n                </Button>\n              </CardBody>\n\n              <CardBody>\n                <Button color=\"primary\" outline active>\n                  primary outline active\n                </Button>\n                <Button color=\"secondary\" outline active>\n                  secondary outline active\n                </Button>\n                <Button color=\"success\" outline active>\n                  success outline active\n                </Button>\n                <Button color=\"info\" outline active>\n                  info outline active\n                </Button>\n                <Button color=\"warning\" outline active>\n                  warning outline active\n                </Button>\n                <Button color=\"danger\" outline active>\n                  danger outline active\n                </Button>\n                <Button color=\"link\" outline active>\n                  link outline active\n                </Button>\n              </CardBody>\n              <CardBody>\n                <Button color=\"primary\" outline disabled>\n                  primary outline disabled\n                </Button>\n                <Button color=\"secondary\" outline disabled>\n                  secondary outline disabled\n                </Button>\n                <Button color=\"success\" outline disabled>\n                  success outline disabled\n                </Button>\n                <Button color=\"info\" outline disabled>\n                  info outline disabled\n                </Button>\n                <Button color=\"warning\" outline disabled>\n                  warning outline disabled\n                </Button>\n                <Button color=\"danger\" outline disabled>\n                  danger outline disabled\n                </Button>\n                <Button color=\"link\" outline disabled>\n                  link outline active\n                </Button>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n\n        <Row>\n          <Col>\n            <Card className=\"mb-3\">\n              <CardHeader>Checkbox and Radio Buttons</CardHeader>\n              <CardBody>\n                <CardSubtitle>Radio Buttons</CardSubtitle>\n                <ButtonGroup>\n                  <Button\n                    color=\"primary\"\n                    onClick={() => this.setState({ rSelected: 1 })}\n                    active={this.state.rSelected === 1}\n                  >\n                    One\n                  </Button>\n                  <Button\n                    color=\"primary\"\n                    onClick={() => this.setState({ rSelected: 2 })}\n                    active={this.state.rSelected === 2}\n                  >\n                    Two\n                  </Button>\n                  <Button\n                    color=\"primary\"\n                    onClick={() => this.setState({ rSelected: 3 })}\n                    active={this.state.rSelected === 3}\n                  >\n                    Three\n                  </Button>\n                </ButtonGroup>\n                <CardText>Selected: {this.state.rSelected}</CardText>\n              </CardBody>\n              <CardBody>\n                <CardSubtitle>Checkbox Buttons</CardSubtitle>\n                <ButtonGroup>\n                  <Button\n                    color=\"primary\"\n                    onClick={() => this.onCheckboxBtnClick(1)}\n                    active={this.state.cSelected.includes(1)}\n                  >\n                    One\n                  </Button>\n                  <Button\n                    color=\"primary\"\n                    onClick={() => this.onCheckboxBtnClick(2)}\n                    active={this.state.cSelected.includes(2)}\n                  >\n                    Two\n                  </Button>\n                  <Button\n                    color=\"primary\"\n                    onClick={() => this.onCheckboxBtnClick(3)}\n                    active={this.state.cSelected.includes(3)}\n                  >\n                    Three\n                  </Button>\n                </ButtonGroup>\n                <CardText>\n                  Selected: {JSON.stringify(this.state.cSelected)}\n                </CardText>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      </Page>\n    );\n  }\n}\n\nexport default ButtonPage;\n","// const availableColors = [\n//   'blue',\n//   'indigo',\n//   'purple',\n//   'pink',\n//   'red',\n//   'orange',\n//   'yellow',\n//   'green',\n//   'teal',\n//   'cyan',\n//   'white',\n//   'gray',\n//   'gray-dark',\n//   'primary',\n//   'secondary',\n//   'success',\n//   'info',\n//   'warning',\n//   'danger',\n//   'light',\n//   'dark',\n// ];\n\nexport const getColor = (availableColor = 'primary') => {\n  if (typeof window === 'undefined') {\n    return null;\n  }\n\n  const color = window\n    .getComputedStyle(document.documentElement)\n    .getPropertyValue(`--${availableColor}`);\n\n  return color;\n};\n\nexport const getThemeColors = () => [\n  'primary',\n  'secondary',\n  'success',\n  'info',\n  'warning',\n  'danger',\n];\n","import ChartJS from 'chart.js';\nimport { getColor } from 'utils/colors';\n\nimport bg5Image from 'assets/img/bg/background_1920-5.jpg';\nimport bg6Image from 'assets/img/bg/background_1920-6.jpg';\nimport bg7Image from 'assets/img/bg/background_1920-7.png';\nimport bg19Image from 'assets/img/bg/background_1920-19.jpg';\n\nexport const overlayCards = [\n  { imgUrl: bg5Image },\n  { imgUrl: bg6Image },\n  { imgUrl: bg7Image },\n  { imgUrl: bg19Image },\n];\n\nexport const bgCards = [\n  { color: 'primary' },\n  { color: 'secondary' },\n  { color: 'info' },\n  { color: 'warning' },\n  { color: 'danger' },\n  { color: 'success' },\n];\n\nexport const gradientCards = [\n  { color: 'primary' },\n  { color: 'secondary' },\n  { color: 'info' },\n  { color: 'warning' },\n  { color: 'danger' },\n  { color: 'success' },\n];\n\nexport const chartjs = {\n  line1Props: {\n    data: {\n      labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n      datasets: [\n        {\n          label: 'My First dataset',\n          borderColor: getColor('secondary'),\n          backgroundColor: getColor('secondary'),\n          data: [0, 13, 22, 34, 46, 35, 30],\n          fill: 'origin',\n        },\n      ],\n    },\n    options: {\n      tooltips: {\n        intersect: false,\n      },\n      animation: {\n        duration: 0,\n      },\n      scales: {\n        xAxes: [\n          {\n            display: false,\n          },\n        ],\n        yAxes: [{ display: false }],\n      },\n      legend: {\n        display: false,\n      },\n      elements: {\n        line: {\n          tension: 0, // disables bezier curves\n        },\n      },\n    },\n  },\n\n  line2Props: {\n    data: {\n      labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n      datasets: [\n        {\n          label: 'My First dataset',\n          borderColor: '#37D5B3',\n          backgroundColor: '#bcc7ff',\n          data: [0, 13, 22, 34, 46, 35, 30],\n          fill: 'origin',\n        },\n      ],\n    },\n    options: {\n      tooltips: {\n        intersect: false,\n      },\n      animation: {\n        duration: 0,\n      },\n      scales: {\n        xAxes: [\n          {\n            display: false,\n          },\n        ],\n        yAxes: [{ display: false }],\n      },\n      legend: {\n        display: false,\n      },\n      elements: {\n        line: {\n          tension: 0, // disables bezier curves\n        },\n      },\n    },\n  },\n\n  line3Props: {\n    data: {\n      labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n      datasets: [\n        {\n          label: 'My First dataset',\n          borderColor: '#37D5B3',\n          backgroundColor: '#bcc7ff',\n          data: [0, 13, 22, 34, 46, 35, 30],\n          fill: 'origin',\n        },\n      ],\n    },\n    options: {\n      tooltips: {\n        intersect: false,\n      },\n      // animation: {\n      //   duration: 0,\n      // },\n      scales: {\n        xAxes: [\n          {\n            display: false,\n          },\n        ],\n        yAxes: [{ display: false }],\n      },\n      legend: {\n        display: false,\n      },\n      elements: {\n        line: {\n          tension: 0, // disables bezier curves\n        },\n      },\n    },\n  },\n};\n\nexport const chartJsGradient = {\n  line1Props: {\n    data: canvas => {\n      const ctx = canvas.getContext('2d');\n      let gradient = ctx.createLinearGradient(0, 0, 0, 240);\n      gradient.addColorStop(\n        0,\n        ChartJS.helpers\n          .color('#00c5dc')\n          .alpha(0.7)\n          .rgbString()\n      );\n      gradient.addColorStop(\n        1,\n        ChartJS.helpers\n          .color('#f2feff')\n          .alpha(0)\n          .rgbString()\n      );\n\n      return {\n        labels: [\n          'January',\n          'February',\n          'March',\n          'April',\n          'May',\n          'June',\n          'July',\n          'August',\n          'September',\n          'October',\n          'January',\n          'February',\n          'March',\n          'April',\n          'May',\n          'June',\n          'July',\n          'August',\n          'September',\n          'October',\n          'January',\n          'February',\n          'March',\n          'April',\n          'May',\n          'June',\n          'July',\n          'August',\n          'September',\n          'October',\n          'January',\n          'February',\n          'March',\n          'April',\n        ],\n        datasets: [\n          {\n            label: 'Sales Stats',\n            backgroundColor: gradient, // Put the gradient here as a fill color\n            borderColor: '#0dc8de',\n\n            pointBackgroundColor: ChartJS.helpers\n              .color('#ffffff')\n              .alpha(0)\n              .rgbString(),\n            pointBorderColor: ChartJS.helpers\n              .color('#ffffff')\n              .alpha(0)\n              .rgbString(),\n            pointHoverBackgroundColor: '#2C80BD',\n            pointHoverBorderColor: ChartJS.helpers\n              .color('#000000')\n              .alpha(0.2)\n              .rgbString(),\n\n            //fill: 'start',\n            data: [\n              20,\n              10,\n              18,\n              15,\n              26,\n              18,\n              15,\n              22,\n              16,\n              12,\n              12,\n              13,\n              10,\n              18,\n              14,\n              24,\n              16,\n              12,\n              19,\n              21,\n              16,\n              14,\n              21,\n              21,\n              13,\n              15,\n              22,\n              24,\n              21,\n              11,\n              14,\n              19,\n              21,\n              17,\n            ],\n          },\n        ],\n      };\n    },\n    type: 'line',\n    options: {\n      title: {\n        display: false,\n      },\n      tooltips: {\n        intersect: false,\n        mode: 'nearest',\n        xPadding: 10,\n        yPadding: 10,\n        caretPadding: 10,\n      },\n      legend: {\n        display: false,\n      },\n      responsive: true,\n      maintainAspectRatio: false,\n      hover: {\n        mode: 'index',\n      },\n      scales: {\n        xAxes: [\n          {\n            display: false,\n            gridLines: false,\n            scaleLabel: {\n              display: true,\n              labelString: 'Month',\n            },\n          },\n        ],\n        yAxes: [\n          {\n            display: false,\n            gridLines: false,\n            scaleLabel: {\n              display: true,\n              labelString: 'Value',\n            },\n            ticks: {\n              beginAtZero: true,\n            },\n          },\n        ],\n      },\n      elements: {\n        line: {\n          tension: 0.19,\n        },\n        point: {\n          radius: 4,\n          borderWidth: 12,\n        },\n      },\n      layout: {\n        padding: {\n          left: 0,\n          right: 0,\n          top: 5,\n          bottom: 0,\n        },\n      },\n    },\n  },\n};\n","import ChartJS from 'chart.js';\nimport { getColor } from 'utils/colors';\n\nexport const getStackLineChart = ({ labels, data }) => canvas => {\n  const ctx = canvas.getContext('2d');\n  let gradient = ctx.createLinearGradient(0, 0, 0, 240);\n  gradient.addColorStop(\n    0,\n    ChartJS.helpers\n      .color('#00c9ff')\n      .alpha(1)\n      .rgbString()\n  );\n  gradient.addColorStop(\n    1,\n    ChartJS.helpers\n      .color('#00c9ff')\n      .alpha(0.2)\n      .rgbString()\n  );\n\n  return {\n    labels,\n    datasets: [\n      {\n        data,\n        label: 'My First dataset',\n        borderColor: getColor('primary'),\n        backgroundColor: gradient,\n        fill: 'origin',\n      },\n    ],\n  };\n};\n\nexport const stackLineChartOptions = {\n  tooltips: {\n    intersect: false,\n  },\n  animation: {\n    duration: 0,\n  },\n  scales: {\n    xAxes: [\n      {\n        display: false,\n      },\n    ],\n    yAxes: [{ display: false }],\n  },\n  legend: {\n    display: false,\n  },\n  // elements: {\n  //   line: {\n  //     tension: 0, // disables bezier curves\n  //   },\n  // },\n};\n","import bg11Image from 'assets/img/bg/background_1920-11.jpg';\nimport bg18Image from 'assets/img/bg/background_1920-18.jpg';\nimport bg1Image from 'assets/img/bg/background_640-1.jpg';\nimport bg3Image from 'assets/img/bg/background_640-3.jpg';\nimport user1Image from 'assets/img/users/100_1.jpg';\nimport { UserCard } from 'components/Card';\nimport Page from 'components/Page';\nimport { bgCards, gradientCards, overlayCards } from 'demos/cardPage';\nimport { getStackLineChart, stackLineChartOptions } from 'demos/chartjs';\nimport React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardImg,\n  CardImgOverlay,\n  CardLink,\n  CardText,\n  CardTitle,\n  Col,\n  ListGroup,\n  ListGroupItem,\n  Row,\n} from 'reactstrap';\n\nconst CardPage = () => {\n  return (\n    <Page title=\"Cards\" breadcrumbs={[{ name: 'cards', active: true }]}>\n      <Row>\n        <Col md={6} sm={6} xs={12} className=\"mb-3\">\n          <Card className=\"flex-row\">\n            <CardImg\n              className=\"card-img-left\"\n              src={bg1Image}\n              style={{ width: 'auto', height: 150 }}\n            />\n            <CardBody>\n              <CardTitle>Horizontal Image Card(Left)</CardTitle>\n              <CardText>\n                Some quick example text to build on the card title and make up\n                the bulk of the card's content.\n              </CardText>\n            </CardBody>\n          </Card>\n        </Col>\n\n        <Col md={6} sm={6} xs={12} className=\"mb-3\">\n          <Card className=\"flex-row\">\n            <CardBody>\n              <CardTitle>Horizontal Image Card(Right)</CardTitle>\n              <CardText>Some quick example card</CardText>\n            </CardBody>\n            <CardImg\n              className=\"card-img-right\"\n              src={bg3Image}\n              style={{ width: 'auto', height: 150 }}\n            />\n          </Card>\n        </Col>\n      </Row>\n      <Row>\n        <Col md={6} sm={6} xs={12} className=\"mb-3\">\n          <Card>\n            <CardImg top src={bg11Image} />\n            <CardBody>\n              <CardTitle>Card with image</CardTitle>\n              <CardText>\n                Some quick example text to build on the card title and make up\n                the bulk of the card's content.\n              </CardText>\n            </CardBody>\n          </Card>\n        </Col>\n\n        <Col md={6} sm={6} xs={12} className=\"mb-3\">\n          <Card>\n            <CardImg top src={bg18Image} />\n            <CardBody>\n              <CardTitle>Card with list group</CardTitle>\n              <CardText>\n                This example shows how to use card with list group{' '}\n              </CardText>\n            </CardBody>\n            <ListGroup flush>\n              <ListGroupItem>Cras justo odio</ListGroupItem>\n              <ListGroupItem>Dapibus ac facilisis in</ListGroupItem>\n              <ListGroupItem>Morbi leo risus</ListGroupItem>\n            </ListGroup>\n            <CardBody>\n              <CardLink tag=\"a\" href=\"#\">\n                Go to details\n              </CardLink>\n              <CardLink tag=\"a\" href=\"#\">\n                More\n              </CardLink>\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n\n      <Row>\n        {['', 'top', 'left', 'right'].map((color, index) => (\n          <Col key={index} md={6} sm={6} xs={12} className=\"mb-3\">\n            <Card\n              inverse\n              className={`border-0 bg-gradient-theme${\n                !!color ? '-' : ''\n              }${color}`}\n              style={{\n                height: 200,\n              }}\n            >\n              <CardBody className=\"d-flex flex-column justify-content-start align-items-start\">\n                <CardTitle>Card title</CardTitle>\n                <CardText>card text</CardText>\n              </CardBody>\n\n              <CardBody className=\"d-flex justify-content-between align-items-center\">\n                <CardText>Karl David</CardText>\n                <Button outline color=\"light\">\n                  Click\n                </Button>\n              </CardBody>\n            </Card>\n          </Col>\n        ))}\n      </Row>\n\n      <Row>\n        {overlayCards.map(({ imgUrl }, index) => {\n          return (\n            <Col key={index} md={6} sm={6} xs={12}>\n              <Card inverse className=\"text-center\">\n                <CardImg width=\"100%\" src={imgUrl} alt=\"Card image cap\" />\n                <CardImgOverlay>\n                  <CardTitle>Card Title</CardTitle>\n                  <CardText>inversed card</CardText>\n                  <CardText>\n                    <small className=\"text-muted\">\n                      Last updated 3 mins ago\n                    </small>\n                  </CardText>\n                </CardImgOverlay>\n              </Card>\n            </Col>\n          );\n        })}\n      </Row>\n\n      <Row>\n        <Col md={5}>\n          <UserCard\n            avatar={user1Image}\n            title=\"Chris\"\n            subtitle=\"Project Lead\"\n            text=\"Give me a star!\"\n            style={{\n              height: 300,\n            }}\n          />\n        </Col>\n\n        <Col md={7}>\n          <Card>\n            <Line\n              data={getStackLineChart({\n                labels: [\n                  'January',\n                  'February',\n                  'March',\n                  'April',\n                  'May',\n                  'June',\n                  'July',\n                ],\n                data: [0, 13000, 5000, 24000, 16000, 25000, 10000],\n              })}\n              options={stackLineChartOptions}\n            />\n            <CardBody className=\"text-primary\" style={{ position: 'absolute' }}>\n              <CardTitle>Chart Card</CardTitle>\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n\n      <Row>\n        {bgCards.map(({ color }, index) => (\n          <Col key={index} lg={4} md={6} sm={6} xs={12} className=\"mb-3\">\n            <Card inverse color={color}>\n              <CardBody>\n                <CardTitle className=\"text-capitalize\">\n                  {color} card title\n                </CardTitle>\n                <CardText>\n                  Some quick example text to build on the card title and make up\n                  the bulk of the card's content.\n                </CardText>\n              </CardBody>\n            </Card>\n          </Col>\n        ))}\n      </Row>\n\n      <Row>\n        {gradientCards.map(({ color }, index) => (\n          <Col key={index} lg={4} md={6} sm={6} xs={12} className=\"mb-3\">\n            <Card\n              inverse\n              className={`bg-gradient-${color} text-center`}\n              style={{ height: 200 }}\n            >\n              <CardBody className=\"d-flex flex-column flex-wrap justify-content-center align-items-center\">\n                <CardTitle>Gradient {color} title</CardTitle>\n                <CardText>card text</CardText>\n              </CardBody>\n            </Card>\n          </Col>\n        ))}\n      </Row>\n    </Page>\n  );\n};\n\nexport default CardPage;\n","import Avatar from 'components/Avatar';\nimport React, { Fragment } from 'react';\nimport { UncontrolledTooltip } from 'reactstrap';\nimport PropTypes from 'utils/propTypes';\n\nconst HorizontalAvatarList = ({\n  tag: Tag,\n  avatars,\n  avatarProps,\n  reversed,\n  ...restProps\n}) => {\n  let leng = reversed ? avatars.length + 1 : 1;\n  const count = reversed ? () => leng-- : () => leng++;\n\n  return (\n    <Tag className=\"d-flex align-items-center\" {...restProps}>\n      {avatars &&\n        avatars.map(({ avatar, name }, i) => {\n          const index = count();\n          const isFirstItem = i === 0;\n\n          return (\n            <Fragment key={index}>\n              <Avatar\n                {...avatarProps}\n                id={`HorizontalAvatarList-avatar-${index}`}\n                src={avatar}\n                style={{\n                  zIndex: index,\n                  border: '3px solid #fff',\n                  marginLeft: !isFirstItem && -20,\n                  marginBottom: '20px',\n                  marginTop:'20px'\n                }}\n              />\n\n              {!!name && (\n                <UncontrolledTooltip\n                  delay={{ show: 0, hide: 0 }}\n                  target={`HorizontalAvatarList-avatar-${index}`}>\n                  {name}\n                </UncontrolledTooltip>\n              )}\n            </Fragment>\n          );\n        })}\n    </Tag>\n  );\n};\n\nHorizontalAvatarList.propTypes = {\n  tag: PropTypes.node,\n  avatars: PropTypes.arrayOf(\n    PropTypes.shape({\n      avatar: PropTypes.string.isRequired,\n      name: PropTypes.string,\n    })\n  ).isRequired,\n  avatarProps: PropTypes.object,\n  reversed: PropTypes.bool,\n};\n\nHorizontalAvatarList.defaultProps = {\n  tag: 'div',\n  avatars: [],\n  avatarProps: {},\n  reversed: false,\n};\n\nexport default HorizontalAvatarList;\n","import world50m from 'assets/geo-data/world-50m.json';\nimport cities from 'assets/geo-data/world-most-populous-cities.json';\nimport { scaleLinear } from 'd3-scale';\nimport React, { Component } from 'react';\nimport {\n  ComposableMap,\n  Geographies,\n  Geography,\n  Marker,\n  Markers,\n  ZoomableGroup,\n} from 'react-simple-maps';\nimport { getColor } from 'utils/colors';\n\nconst cityScale = scaleLinear()\n  .domain([0, 37843000])\n  .range([1, 25]);\n\nclass BubbleMap extends Component {\n  state = {\n    cities,\n  };\n\n  render() {\n    // const primaryColor = getColor('primary');\n    const secondaryColor = getColor('secondary');\n    const lightColor = getColor('light');\n\n    return (\n      <ComposableMap\n        projectionConfig={{ scale: 205 }}\n        width={980}\n        height={551}\n        style={{\n          width: '100%',\n          height: 'auto',\n        }}\n      >\n        <ZoomableGroup center={[0, 20]} disablePanning>\n          <Geographies geography={world50m}>\n            {(geographies, projection) =>\n              geographies.map(\n                (geography, i) =>\n                  geography.id !== 'ATA' && (\n                    <Geography\n                      key={i}\n                      geography={geography}\n                      projection={projection}\n                      style={{\n                        default: {\n                          fill: lightColor,\n                          stroke: lightColor,\n                          strokeWidth: 0.75,\n                          outline: 'none',\n                        },\n                        hover: {\n                          fill: secondaryColor,\n                          stroke: secondaryColor,\n                          strokeWidth: 0.75,\n                          outline: 'none',\n                        },\n                        pressed: {\n                          fill: secondaryColor,\n                          stroke: secondaryColor,\n                          strokeWidth: 0.75,\n                          outline: 'none',\n                        },\n                      }}\n                    />\n                  ),\n              )\n            }\n          </Geographies>\n          <Markers>\n            {this.state.cities.map((city, i) => (\n              <Marker key={i} marker={city}>\n                <circle\n                  cx={0}\n                  cy={0}\n                  r={cityScale(city.population)}\n                  fill={secondaryColor}\n                  stroke={secondaryColor}\n                  strokeWidth=\"2\"\n                />\n              </Marker>\n            ))}\n          </Markers>\n        </ZoomableGroup>\n      </ComposableMap>\n    );\n  }\n}\n\nexport default BubbleMap;\n","import React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nimport { Media } from 'reactstrap';\n\nimport Typography from 'components/Typography';\n\nconst ProductMedia = ({ image, title, description, right, ...restProps }) => {\n  return (\n    <Media {...restProps}>\n      <Media left>\n        <Media\n          object\n          src={image}\n          className=\"rounded mr-2 mb-2\"\n          style={{ width: 100, height: 'auto' }}\n        />\n      </Media>\n      <Media body className=\"overflow-hidden\">\n        <Media heading tag=\"h5\" className=\"text-truncate\">\n          {title}\n        </Media>\n        <p className=\"text-muted text-truncate\">{description}</p>\n      </Media>\n      <Media right className=\"align-self-center\">\n        {right && typeof right === 'string' ? (\n          <Typography type=\"h4\">{right}</Typography>\n        ) : (\n          right\n        )}\n      </Media>\n    </Media>\n  );\n};\n\nProductMedia.propTypes = {\n  image: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  right: PropTypes.node,\n};\n\nexport default ProductMedia;\n","import React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nimport { Media, Button } from 'reactstrap';\n\nimport Avatar from './Avatar';\n\nconst statusMap = {\n  open: 'info',\n  closed: 'muted',\n  pending: 'success',\n};\n\nconst SupportTicket = ({\n  avatar,\n  name,\n  date,\n  text,\n  status,\n  onClick,\n  ...restProps\n}) => {\n  return (\n    <div {...restProps}>\n      <Media className=\"m-2\">\n        <Media left className=\"mr-2\">\n          <Avatar src={avatar} />\n        </Media>\n        <Media body>\n          <Media heading tag=\"h6\" className=\"m-0\">\n            {name}\n          </Media>\n          <p className=\"text-muted m-0\">\n            <small>{date}</small>\n          </p>\n        </Media>\n        <Media right className=\"align-self-center\">\n          <Button\n            color=\"link\"\n            className={`text-capitalize text-${statusMap[status]}`}\n          >\n            {status}\n          </Button>\n        </Media>\n      </Media>\n      <Media>\n        <p className=\"text-muted\">{text}</p>\n      </Media>\n    </div>\n  );\n};\n\nSupportTicket.propTypes = {\n  avatar: PropTypes.string,\n  name: PropTypes.string,\n  date: PropTypes.date,\n  text: PropTypes.string,\n  status: PropTypes.oneOf(['open', 'closed', 'pending']),\n  onClick: PropTypes.func,\n};\n\nSupportTicket.defualtProps = {\n  avatar: '',\n  name: '',\n  date: '',\n  text: '',\n  status: 'pending',\n  onClick: () => {},\n};\n\nexport default SupportTicket;\n","import React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nimport { Table, Progress } from 'reactstrap';\n\nimport Avatar from 'components/Avatar';\n\nimport withBadge from 'hocs/withBadge';\n\nconst AvatarWithBadge = withBadge({\n  position: 'bottom-right',\n  color: 'success',\n})(Avatar);\n\nconst UserProgressTable = ({ headers, usersData, ...restProps }) => {\n  return (\n    <Table responsive hover {...restProps}>\n      <thead>\n        <tr className=\"text-capitalize align-middle text-center\">\n          {headers.map((item, index) => <th key={index}>{item}</th>)}\n        </tr>\n      </thead>\n      <tbody>\n        {usersData.map(({ avatar, name, date, progress }, index) => (\n          <tr key={index}>\n            <td className=\"align-middle text-center\">\n              <AvatarWithBadge src={avatar} />\n            </td>\n            <td className=\"align-middle text-center\">{name}</td>\n            <td className=\"align-middle text-center\">{date}</td>\n            <td className=\"align-middle text-center\">\n              <Progress value={progress} style={{ height: 5 }} />\n            </td>\n            <td className=\"align-middle text-center\">{progress}%</td>\n          </tr>\n        ))}\n      </tbody>\n    </Table>\n  );\n};\n\nUserProgressTable.propTypes = {\n  headers: PropTypes.node,\n  usersData: PropTypes.arrayOf(\n    PropTypes.shape({\n      avatar: PropTypes.string,\n      name: PropTypes.string,\n      date: PropTypes.date,\n    })\n  ),\n};\n\nUserProgressTable.defaultProps = {\n  headers: [],\n  usersData: [],\n};\n\nexport default UserProgressTable;\n","import React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nimport { Card, CardText, CardTitle, Progress } from 'reactstrap';\nimport Typography from '../Typography';\n\nconst NumberWidget = ({\n  title,\n  subtitle,\n  number,\n  color,\n  progress: { value, label },\n  ...restProps\n}) => {\n  return (\n    <Card body {...restProps}>\n      <div className=\"d-flex justify-content-between\">\n        <CardText tag=\"div\">\n          <Typography className=\"mb-0\">\n            <strong>{title}</strong>\n          </Typography>\n          <Typography className=\"mb-0 text-muted small\">{subtitle}</Typography>\n        </CardText>\n        <CardTitle className={`text-${color}`}>{number}</CardTitle>\n      </div>\n      <Progress value={value} color={color} style={{ height: '8px' }} />\n      <CardText tag=\"div\" className=\"d-flex justify-content-between\">\n        <Typography tag=\"span\" className=\"text-left text-muted small\">\n          {label}\n        </Typography>\n        <Typography tag=\"span\" className=\"text-right text-muted small\">\n          {value}%\n        </Typography>\n      </CardText>\n    </Card>\n  );\n};\n\nNumberWidget.propTypes = {\n  title: PropTypes.string.isRequired,\n  subtitle: PropTypes.string,\n  number: PropTypes.oneOfType([\n    PropTypes.string.isRequired,\n    PropTypes.number.isRequired,\n  ]),\n  color: PropTypes.oneOf([\n    'primary',\n    'secondary',\n    'success',\n    'info',\n    'warning',\n    'danger',\n    'light',\n    'dark',\n  ]),\n  progress: PropTypes.shape({\n    value: PropTypes.number,\n    label: PropTypes.string,\n  }),\n};\n\nNumberWidget.defaultProps = {\n  title: '',\n  subtitle: '',\n  number: 0,\n  color: 'primary',\n  progress: {\n    value: 0,\n    label: '',\n  },\n};\n\nexport default NumberWidget;\n","import React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nimport classNames from 'classnames';\n\nimport { Card, CardBody, CardTitle, CardSubtitle } from 'reactstrap';\n\nconst IconWidget = ({\n  bgColor,\n  icon: Icon,\n  iconProps,\n  title,\n  subtitle,\n  className,\n  ...restProps\n}) => {\n  const classes = classNames('cr-widget', className, {\n    [`bg-${bgColor}`]: bgColor,\n  });\n  return (\n    <Card inverse className={classes} {...restProps}>\n      <CardBody className=\"cr-widget__icon\">\n        <Icon size={50} {...iconProps} />\n      </CardBody>\n      <CardBody>\n        <CardTitle>{title}</CardTitle>\n        <CardSubtitle>{subtitle}</CardSubtitle>\n      </CardBody>\n    </Card>\n  );\n};\n\nIconWidget.propTypes = {\n  bgColor: PropTypes.string,\n  icon: PropTypes.component,\n  iconProps: PropTypes.object,\n  title: PropTypes.string,\n  subtitle: PropTypes.string,\n};\n\nIconWidget.defaultProps = {\n  bgColor: 'primary',\n  icon: 'span',\n  iconProps: { size: 50 },\n};\n\nexport default IconWidget;\n","import product1Image from 'assets/img/products/product_640-1.jpg';\nimport product2Image from 'assets/img/products/product_640-2.jpg';\nimport product3Image from 'assets/img/products/product_640-3.jpg';\nimport product4Image from 'assets/img/products/product_640-4.jpg';\nimport product5Image from 'assets/img/products/product_640-5.jpg';\nimport product6Image from 'assets/img/products/product_640-6.jpg';\n\nimport user1Image from 'assets/img/users/100_1.jpg';\nimport user2Image from 'assets/img/users/100_2.jpg';\nimport user3Image from 'assets/img/users/100_3.jpg';\nimport user4Image from 'assets/img/users/100_4.jpg';\nimport user5Image from 'assets/img/users/100_5.jpg';\nimport user6Image from 'assets/img/users/100_6.jpg';\nimport user7Image from 'assets/img/users/100_7.jpg';\nimport user8Image from 'assets/img/users/100_8.jpg';\nimport user9Image from 'assets/img/users/100_9.jpg';\nimport user10Image from 'assets/img/users/100_10.jpg';\nimport user11Image from 'assets/img/users/100_11.jpg';\nimport user12Image from 'assets/img/users/100_12.jpg';\nimport user13Image from 'assets/img/users/100_13.jpg';\nimport user14Image from 'assets/img/users/100_14.jpg';\n\nexport const productsData = [\n  {\n    id: 1,\n    image: product1Image,\n    title: 'Admin Template',\n    description: 'Responsive admin template...',\n    right: '$36',\n  },\n  {\n    id: 2,\n    image: product2Image,\n    title: 'Schedule App',\n    description: 'Manage your schedule...',\n    right: '$9',\n  },\n  {\n    id: 3,\n    image: product3Image,\n    title: 'Chat App',\n    description: 'Realtime chat application...',\n    right: '$12',\n  },\n  {\n    id: 4,\n    image: product4Image,\n    title: 'Wordpress Business Theme',\n    description: 'Over 100+ templates and pages...',\n    right: '$24',\n  },\n  {\n    id: 5,\n    image: product5Image,\n    title: 'Camera App',\n    description: 'Over 30+ filter...',\n    right: '$6.99',\n  },\n  {\n    id: 6,\n    image: product6Image,\n    title: 'Calendar App',\n    description: 'Organize your schedule...',\n    right: '$0.99',\n  },\n];\n\nexport const avatarsData = [\n  {\n    avatar: user1Image,\n    name: 'Tom',\n    date: '3 month ago',\n  },\n  {\n    avatar: user2Image,\n    name: 'Jenny',\n    date: '1 year ago',\n  },\n  {\n    avatar: user3Image,\n    name: 'Sim',\n    date: '2 hour ago',\n  },\n  {\n    avatar: user4Image,\n    name: 'Christine',\n    date: 'a month ago',\n  },\n  {\n    avatar: user5Image,\n    name: 'Bread',\n    date: '6 months ago',\n  },\n  {\n    avatar: user6Image,\n    name: 'Dan',\n    date: '2 years ago',\n  },\n  {\n    avatar: user7Image,\n    name: 'Merry',\n    date: '3 month ago',\n  },\n  {\n    avatar: user8Image,\n    name: 'John',\n    date: '1 month ago',\n  },\n  {\n    avatar: user9Image,\n    name: 'Shane',\n    date: '7 month ago',\n  },\n  {\n    avatar: user10Image,\n    name: 'Star',\n    date: '1 year ago',\n  },\n  {\n    avatar: user11Image,\n    name: 'Jenny',\n    date: '3 month ago',\n  },\n  {\n    avatar: user12Image,\n    name: 'Park',\n    date: '4 month ago',\n  },\n  {\n    avatar: user13Image,\n    name: 'Dave',\n    date: '9 month ago',\n  },\n  {\n    avatar: user14Image,\n    name: 'Jackson',\n    date: '10 month ago',\n  },\n];\n\nexport const userProgressTableData = [\n  {\n    avatar: user1Image,\n    name: 'Tom',\n    date: '3 month ago',\n    progress: 75,\n  },\n  {\n    avatar: user2Image,\n    name: 'Jenny',\n    date: '1 year ago',\n    progress: 60,\n  },\n  {\n    avatar: user3Image,\n    name: 'Sim',\n    date: '2 hour ago',\n    progress: 50,\n  },\n  {\n    avatar: user4Image,\n    name: 'Christine',\n    date: 'a month ago',\n    progress: 40,\n  },\n  {\n    avatar: user5Image,\n    name: 'Bread',\n    date: '6 months ago',\n    progress: 30,\n  },\n  {\n    avatar: user6Image,\n    name: 'Dan',\n    date: '2 years ago',\n    progress: 25,\n  },\n];\n\nexport const supportTicketsData = [\n  {\n    id: 1,\n    avatar: user1Image,\n    name: 'Sim',\n    date: '30 mins ago',\n    text:\n      'Lorem ipsum dolor sit amet,consectetuer edipiscing elit,sed diam nonummy nibh euismod tinciduntut laoreet doloremagna aliquam erat volutpat.',\n    status: 'pending',\n  },\n  {\n    id: 2,\n    avatar: user2Image,\n    name: 'Jane',\n    date: '1 hour ago',\n    text:\n      'Lorem ipsum dolor sit amet,consectetuer edipiscing elit,sed diam nonummy nibh euismod tinciduntut laoreet doloremagna aliquam erat volutpat.',\n    status: 'open',\n  },\n  {\n    id: 3,\n    avatar: user3Image,\n    name: 'Tom',\n    date: 'yesterday',\n    text:\n      'Lorem ipsum dolor sit amet,consectetuer edipiscing elit,sed diam nonummy nibh euismod tinciduntut laoreet doloremagna aliquam erat volutpat.',\n    status: 'closed',\n  },\n];\n\nexport const todosData = [\n  { id: 1, title: 'task -1', done: true },\n  { id: 2, title: 'task -2', done: false },\n  { id: 3, title: 'task -3', done: true },\n  { id: 4, title: 'task -4', done: true },\n  { id: 5, title: 'task -5', done: false },\n];\n\nexport const chartjs = {\n  bar: {\n    data: {\n      labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n      datasets: [\n        {\n          label: 'Expense for this year',\n          backgroundColor: '#37D5B3',\n          stack: 'Expense',\n          data: [10000, 30000, 50000, 80000, 60000, 20000, 10000],\n        },\n        {\n          label: 'Expense for last year',\n          backgroundColor: '#2C80BD',\n          stack: 'Expense',\n          data: [30000, 80000, 50000, 100000, 60000, 40000, 90000],\n        },\n      ],\n    },\n    options: {\n      title: {\n        display: false,\n        text: 'Chart.js Bar Chart - Stacked',\n      },\n      tooltips: {\n        mode: 'index',\n        intersect: false,\n      },\n      responsive: true,\n      legend: {\n        display: false,\n      },\n      scales: {\n        xAxes: [\n          {\n            stacked: true,\n            display: false,\n          },\n        ],\n        yAxes: [\n          {\n            stacked: true,\n            display: false,\n          },\n        ],\n      },\n    },\n  },\n  doughnut: {\n    data: {\n      datasets: [\n        {\n          data: [20, 30, 40, 50, 60],\n          backgroundColor: [\n            '#37D5B3',\n            '#2C80BD',\n            '#45b649',\n            '#00c9ff',\n            '#ffd700',\n          ],\n          label: 'Dataset 1',\n        },\n      ],\n      labels: ['Red', 'Orange', 'Yellow', 'Green', 'Blue'],\n    },\n    options: {\n      responsive: true,\n      legend: {\n        display: false,\n      },\n      title: {\n        display: false,\n        text: 'Chart.js Doughnut Chart',\n      },\n      animation: {\n        animateScale: true,\n        animateRotate: true,\n      },\n    },\n  },\n  line: {\n    data: {\n      labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n      datasets: [\n        {\n          label: 'Revenue for this year',\n          borderColor: '#37D5B3',\n          backgroundColor: '#37D5B3',\n          data: [0, 1300, 2200, 3400, 4600, 3500, 3000],\n        },\n\n        {\n          label: 'Revenue for last year',\n          borderColor: '#2C80BD',\n          backgroundColor: '#2C80BD',\n          data: [0, 1300, 2200, 3400, 4600, 3500, 3000],\n        },\n      ],\n    },\n    options: {\n      responsive: true,\n      legend: {\n        display: false,\n      },\n      title: {\n        display: false,\n        text: 'Chart.js Line Chart - Stacked Area',\n      },\n      tooltips: {\n        intersect: false,\n        mode: 'nearest',\n      },\n      hover: {\n        mode: 'index',\n      },\n      scales: {\n        xAxes: [\n          {\n            scaleLabel: {\n              display: false,\n              labelString: 'Month',\n            },\n            gridLines: {\n              display: false,\n            },\n          },\n        ],\n        yAxes: [\n          {\n            stacked: true,\n            scaleLabel: {\n              display: false,\n              labelString: 'Value',\n            },\n            gridLines: {\n              display: false,\n            },\n          },\n        ],\n      },\n    },\n  },\n};\n","import { AnnouncementCard, TodosCard } from 'components/Card';\nimport HorizontalAvatarList from 'components/HorizontalAvatarList';\nimport MapWithBubbles from 'components/MapWithBubbles';\nimport Page from 'components/Page';\nimport ProductMedia from 'components/ProductMedia';\nimport SupportTicket from 'components/SupportTicket';\nimport UserProgressTable from 'components/UserProgressTable';\nimport { IconWidget, NumberWidget } from 'components/Widget';\nimport { getStackLineChart, stackLineChartOptions } from 'demos/chartjs';\nimport {\n  avatarsData,\n  chartjs,\n  productsData,\n  supportTicketsData,\n  todosData,\n  userProgressTableData,\n} from 'demos/dashboardPage';\nimport React from 'react';\nimport { Bar, Line } from 'react-chartjs-2';\nimport {\n  MdBubbleChart,\n  MdInsertChart,\n  MdPersonPin,\n  MdPieChart,\n  MdRateReview,\n  MdShare,\n  MdShowChart,\n  MdThumbUp,\n} from 'react-icons/md';\nimport InfiniteCalendar from 'react-infinite-calendar';\nimport {\n  Badge,\n  Button,\n  Card,\n  CardBody,\n  CardDeck,\n  CardGroup,\n  CardHeader,\n  CardTitle,\n  Col,\n  ListGroup,\n  ListGroupItem,\n  Row,\n} from 'reactstrap';\nimport { getColor } from 'utils/colors';\n\nconst today = new Date();\nconst lastWeek = new Date(\n  today.getFullYear(),\n  today.getMonth(),\n  today.getDate() - 7,\n);\n\nclass DashboardPage extends React.Component {\n  componentDidMount() {\n    // this is needed, because InfiniteCalendar forces window scroll\n    window.scrollTo(0, 0);\n  }\n\n  render() {\n    const primaryColor = getColor('primary');\n    const secondaryColor = getColor('secondary');\n\n    return (\n      <Page\n        className=\"DashboardPage\"\n        title=\"Dashboard\"\n        breadcrumbs={[{ name: 'Dashboard', active: true }]}\n      >\n        <Row>\n          <Col lg={3} md={6} sm={6} xs={12}>\n            <NumberWidget\n              title=\"Total Profit\"\n              subtitle=\"This month\"\n              number=\"9.8k\"\n              color=\"secondary\"\n              progress={{\n                value: 75,\n                label: 'Last month',\n              }}\n            />\n          </Col>\n\n          <Col lg={3} md={6} sm={6} xs={12}>\n            <NumberWidget\n              title=\"Monthly Visitors\"\n              subtitle=\"This month\"\n              number=\"5,400\"\n              color=\"secondary\"\n              progress={{\n                value: 45,\n                label: 'Last month',\n              }}\n            />\n          </Col>\n\n          <Col lg={3} md={6} sm={6} xs={12}>\n            <NumberWidget\n              title=\"New Users\"\n              subtitle=\"This month\"\n              number=\"3,400\"\n              color=\"secondary\"\n              progress={{\n                value: 90,\n                label: 'Last month',\n              }}\n            />\n          </Col>\n\n          <Col lg={3} md={6} sm={6} xs={12}>\n            <NumberWidget\n              title=\"Bounce Rate\"\n              subtitle=\"This month\"\n              number=\"38%\"\n              color=\"secondary\"\n              progress={{\n                value: 60,\n                label: 'Last month',\n              }}\n            />\n          </Col>\n        </Row>\n\n        <Row>\n          <Col lg=\"8\" md=\"12\" sm=\"12\" xs=\"12\">\n            <Card>\n              <CardHeader>\n                Total Revenue{' '}\n                <small className=\"text-muted text-capitalize\">This year</small>\n              </CardHeader>\n              <CardBody>\n                <Line data={chartjs.line.data} options={chartjs.line.options} />\n              </CardBody>\n            </Card>\n          </Col>\n\n          <Col lg=\"4\" md=\"12\" sm=\"12\" xs=\"12\">\n            <Card>\n              <CardHeader>Total Expense</CardHeader>\n              <CardBody>\n                <Bar data={chartjs.bar.data} options={chartjs.bar.options} />\n              </CardBody>\n              <ListGroup flush>\n                <ListGroupItem>\n                  <MdInsertChart size={25} color={primaryColor} /> Cost of sales{' '}\n                  <Badge color=\"secondary\">$3000</Badge>\n                </ListGroupItem>\n                <ListGroupItem>\n                  <MdBubbleChart size={25} color={primaryColor} /> Management\n                  costs <Badge color=\"secondary\">$1200</Badge>\n                </ListGroupItem>\n                <ListGroupItem>\n                  <MdShowChart size={25} color={primaryColor} /> Financial costs{' '}\n                  <Badge color=\"secondary\">$800</Badge>\n                </ListGroupItem>\n                <ListGroupItem>\n                  <MdPieChart size={25} color={primaryColor} /> Other operating\n                  costs <Badge color=\"secondary\">$2400</Badge>\n                </ListGroupItem>\n              </ListGroup>\n            </Card>\n          </Col>\n        </Row>\n\n        <CardGroup style={{ marginBottom: '1rem' }}>\n          <IconWidget\n            bgColor=\"white\"\n            inverse={false}\n            icon={MdThumbUp}\n            title=\"50+ Likes\"\n            subtitle=\"People you like\"\n          />\n          <IconWidget\n            bgColor=\"white\"\n            inverse={false}\n            icon={MdRateReview}\n            title=\"10+ Reviews\"\n            subtitle=\"New Reviews\"\n          />\n          <IconWidget\n            bgColor=\"white\"\n            inverse={false}\n            icon={MdShare}\n            title=\"30+ Shares\"\n            subtitle=\"New Shares\"\n          />\n        </CardGroup>\n\n        <Row>\n          <Col md=\"6\" sm=\"12\" xs=\"12\">\n            <Card>\n              <CardHeader>New Products</CardHeader>\n              <CardBody>\n                {productsData.map(\n                  ({ id, image, title, description, right }) => (\n                    <ProductMedia\n                      key={id}\n                      image={image}\n                      title={title}\n                      description={description}\n                      right={right}\n                    />\n                  ),\n                )}\n              </CardBody>\n            </Card>\n          </Col>\n\n          <Col md=\"6\" sm=\"12\" xs=\"12\">\n            <Card>\n              <CardHeader>New Users</CardHeader>\n              <CardBody>\n                <UserProgressTable\n                  headers={[\n                    <MdPersonPin size={25} />,\n                    'name',\n                    'date',\n                    'participation',\n                    '%',\n                  ]}\n                  usersData={userProgressTableData}\n                />\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n\n        <Row>\n          <Col lg={4} md={4} sm={12} xs={12}>\n            <Card>\n              <Line\n                data={getStackLineChart({\n                  labels: [\n                    'January',\n                    'February',\n                    'March',\n                    'April',\n                    'May',\n                    'June',\n                    'July',\n                  ],\n                  data: [0, 13000, 5000, 24000, 16000, 25000, 10000],\n                })}\n                options={stackLineChartOptions}\n              />\n              <CardBody\n                className=\"text-primary\"\n                style={{ position: 'absolute' }}\n              >\n                <CardTitle>\n                  <MdInsertChart /> Sales\n                </CardTitle>\n              </CardBody>\n            </Card>\n          </Col>\n\n          <Col lg={4} md={4} sm={12} xs={12}>\n            <Card>\n              <Line\n                data={getStackLineChart({\n                  labels: [\n                    'January',\n                    'February',\n                    'March',\n                    'April',\n                    'May',\n                    'June',\n                    'July',\n                  ],\n                  data: [10000, 15000, 5000, 10000, 5000, 10000, 10000],\n                })}\n                options={stackLineChartOptions}\n              />\n              <CardBody\n                className=\"text-primary\"\n                style={{ position: 'absolute' }}\n              >\n                <CardTitle>\n                  <MdInsertChart /> Revenue\n                </CardTitle>\n              </CardBody>\n            </Card>\n          </Col>\n          <Col lg={4} md={4} sm={12} xs={12}>\n            <Card>\n              <Line\n                data={getStackLineChart({\n                  labels: [\n                    'January',\n                    'February',\n                    'March',\n                    'April',\n                    'May',\n                    'June',\n                    'July',\n                  ],\n                  data: [0, 13000, 5000, 24000, 16000, 25000, 10000].reverse(),\n                })}\n                options={stackLineChartOptions}\n              />\n              <CardBody\n                className=\"text-primary\"\n                style={{ position: 'absolute', right: 0 }}\n              >\n                <CardTitle>\n                  <MdInsertChart /> Profit\n                </CardTitle>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n\n        <Row>\n          <Col lg=\"4\" md=\"12\" sm=\"12\" xs=\"12\">\n            <InfiniteCalendar\n              selected={today}\n              minDate={lastWeek}\n              width=\"100%\"\n              theme={{\n                accentColor: primaryColor,\n                floatingNav: {\n                  background: secondaryColor,\n                  chevron: primaryColor,\n                  color: '#FFF',\n                },\n                headerColor: primaryColor,\n                selectionColor: secondaryColor,\n                textColor: {\n                  active: '#FFF',\n                  default: '#333',\n                },\n                todayColor: secondaryColor,\n                weekdayColor: primaryColor,\n              }}\n            />\n          </Col>\n\n          <Col lg=\"8\" md=\"12\" sm=\"12\" xs=\"12\">\n            <Card inverse className=\"bg-gradient-primary\">\n              <CardHeader className=\"bg-gradient-primary\">\n                Map with bubbles\n              </CardHeader>\n              <CardBody>\n                <MapWithBubbles />\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n\n        <CardDeck style={{ marginBottom: '1rem' }}>\n          <Card body style={{ overflowX: 'auto','paddingBottom':'15px','height': 'fit-content','paddingTop': 'inherit'}}>\n            <HorizontalAvatarList\n              avatars={avatarsData}\n              avatarProps={{ size: 50 }}\n            />\n          </Card>\n\n          <Card body style={{ overflowX: 'auto','paddingBottom':'15px','height': 'fit-content','paddingTop': 'inherit'}}>\n            <HorizontalAvatarList\n              avatars={avatarsData}\n              avatarProps={{ size: 50 }}\n              reversed\n            />\n          </Card>\n        </CardDeck>\n\n        <Row>\n          <Col lg=\"4\" md=\"12\" sm=\"12\" xs=\"12\">\n            <AnnouncementCard\n              color=\"gradient-secondary\"\n              header=\"Announcement\"\n              avatarSize={60}\n              name=\"Jamy\"\n              date=\"1 hour ago\"\n              text=\"Lorem ipsum dolor sit amet,consectetuer edipiscing elit,sed diam nonummy euismod tinciduntut laoreet doloremagna\"\n              buttonProps={{\n                children: 'show',\n              }}\n              style={{ height: 500 }}\n            />\n          </Col>\n\n          <Col lg=\"4\" md=\"12\" sm=\"12\" xs=\"12\">\n            <Card>\n              <CardHeader>\n                <div className=\"d-flex justify-content-between align-items-center\">\n                  <span>Support Tickets</span>\n                  <Button>\n                    <small>View All</small>\n                  </Button>\n                </div>\n              </CardHeader>\n              <CardBody>\n                {supportTicketsData.map(supportTicket => (\n                  <SupportTicket key={supportTicket.id} {...supportTicket} />\n                ))}\n              </CardBody>\n            </Card>\n          </Col>\n\n          <Col lg=\"4\" md=\"12\" sm=\"12\" xs=\"12\">\n            <TodosCard todos={todosData} />\n          </Col>\n        </Row>\n      </Page>\n    );\n  }\n}\nexport default DashboardPage;\n","import {\n  MdLanguage,\n  MdLightbulbOutline,\n  MdMailOutline,\n  MdPlayCircleOutline,\n  MdRadio,\n  MdSnooze,\n  MdThumbsUpDown,\n  MdThumbUp,\n} from 'react-icons/md';\n\nexport const iconWidgetsData = [\n  {\n    bgColor: 'primary',\n    icon: MdThumbUp,\n    title: 'Primary',\n    subtitle: 'widget subtitle',\n  },\n  {\n    bgColor: 'secondary',\n    icon: MdThumbsUpDown,\n    title: 'Secondary',\n    subtitle: 'widget subtitle',\n  },\n  {\n    bgColor: 'success',\n    icon: MdLanguage,\n    title: 'Success',\n    subtitle: 'widget subtitle',\n  },\n  {\n    bgColor: 'danger',\n    icon: MdLightbulbOutline,\n    title: 'Danger',\n    subtitle: 'widget subtitle',\n  },\n  {\n    bgColor: 'warning',\n    icon: MdPlayCircleOutline,\n    title: 'Warning',\n    subtitle: 'widget subtitle',\n  },\n  {\n    bgColor: 'info',\n    icon: MdRadio,\n    title: 'Info',\n    subtitle: 'widget subtitle',\n  },\n  {\n    bgColor: 'light',\n    icon: MdSnooze,\n    title: 'Light',\n    subtitle: 'widget subtitle',\n    inverse: false,\n  },\n  {\n    bgColor: 'dark',\n    icon: MdMailOutline,\n    title: 'Dark',\n    subtitle: 'widget subtitle',\n  },\n];\n\nexport const numberWidgetsData = [\n  { color: 'primary' },\n  { color: 'secondary' },\n  { color: 'success' },\n  { color: 'info' },\n  { color: 'warning' },\n  { color: 'danger' },\n  { color: 'light' },\n  { color: 'dark' },\n];\n","import Page from 'components/Page';\nimport React from 'react';\nimport {\n  Button,\n  ButtonGroup,\n  Card,\n  CardBody,\n  CardHeader,\n  Col,\n  Modal,\n  ModalBody,\n  ModalFooter,\n  ModalHeader,\n  Row,\n} from 'reactstrap';\n\nclass ModalPage extends React.Component {\n  state = {\n    modal: false,\n    modal_backdrop: false,\n    modal_nested_parent: false,\n    modal_nested: false,\n    backdrop: true,\n  };\n\n  toggle = modalType => () => {\n    if (!modalType) {\n      return this.setState({\n        modal: !this.state.modal,\n      });\n    }\n\n    this.setState({\n      [`modal_${modalType}`]: !this.state[`modal_${modalType}`],\n    });\n  };\n\n  render() {\n    return (\n      <Page title=\"Modals\" breadcrumbs={[{ name: 'modals', active: true }]}>\n        <Row>\n          <Col md=\"12\" sm=\"12\" xs=\"12\">\n            <Card>\n              <CardHeader>Modal</CardHeader>\n              <CardBody>\n                <Button onClick={this.toggle()}>Launch Modal</Button>\n                <Modal\n                  isOpen={this.state.modal}\n                  toggle={this.toggle()}\n                  className={this.props.className}>\n                  <ModalHeader toggle={this.toggle()}>Modal title</ModalHeader>\n                  <ModalBody>\n                    Lorem ipsum dolor sit amet, consectetur adipisicing elit,\n                    sed do eiusmod tempor incididunt ut labore et dolore magna\n                    aliqua. Ut enim ad minim veniam, quis nostrud exercitation\n                    ullamco laboris nisi ut aliquip ex ea commodo consequat.\n                    Duis aute irure dolor in reprehenderit in voluptate velit\n                    esse cillum dolore eu fugiat nulla pariatur. Excepteur sint\n                    occaecat cupidatat non proident, sunt in culpa qui officia\n                    deserunt mollit anim id est laborum.\n                  </ModalBody>\n                  <ModalFooter>\n                    <Button color=\"primary\" onClick={this.toggle()}>\n                      Do Something\n                    </Button>{' '}\n                    <Button color=\"secondary\" onClick={this.toggle()}>\n                      Cancel\n                    </Button>\n                  </ModalFooter>\n                </Modal>\n              </CardBody>\n            </Card>\n          </Col>\n\n          <Col md=\"12\" sm=\"12\" xs=\"12\">\n            <Card>\n              <CardHeader className=\"d-flex justify-content-between\">\n                Backdrop\n                <ButtonGroup size=\"sm\">\n                  <Button\n                    onClick={() => this.setState({ backdrop: true })}\n                    color=\"primary\"\n                    active={this.state.backdrop}>\n                    true\n                  </Button>\n                  <Button\n                    onClick={() => this.setState({ backdrop: false })}\n                    color=\"primary\"\n                    active={!this.state.backdrop}>\n                    false\n                  </Button>\n                  <Button\n                    onClick={() => this.setState({ backdrop: 'static' })}\n                    color=\"primary\"\n                    active={this.state.backdrop === 'static'}>\n                    static\n                  </Button>\n                </ButtonGroup>\n              </CardHeader>\n              <CardBody>\n                <p>Backdrop state: {`${this.state.backdrop}`}</p>\n                <Button onClick={this.toggle('backdrop')}>Launch Modal</Button>\n                <Modal\n                  isOpen={this.state.modal_backdrop}\n                  toggle={this.toggle('backdrop')}\n                  backdrop={this.state.backdrop}>\n                  <ModalHeader toggle={this.toggle('backdrop')}>\n                    Modal title\n                  </ModalHeader>\n                  <ModalBody>\n                    Lorem ipsum dolor sit amet, consectetur adipisicing elit,\n                    sed do eiusmod tempor incididunt ut labore et dolore magna\n                    aliqua. Ut enim ad minim veniam, quis nostrud exercitation\n                    ullamco laboris nisi ut aliquip ex ea commodo consequat.\n                    Duis aute irure dolor in reprehenderit in voluptate velit\n                    esse cillum dolore eu fugiat nulla pariatur. Excepteur sint\n                    occaecat cupidatat non proident, sunt in culpa qui officia\n                    deserunt mollit anim id est laborum.\n                  </ModalBody>\n                  <ModalFooter>\n                    <Button color=\"primary\" onClick={this.toggle('backdrop')}>\n                      Do Something\n                    </Button>{' '}\n                    <Button color=\"secondary\" onClick={this.toggle('backdrop')}>\n                      Cancel\n                    </Button>\n                  </ModalFooter>\n                </Modal>\n              </CardBody>\n            </Card>\n          </Col>\n\n          <Col md=\"12\" sm=\"12\" xs=\"12\">\n            <Card>\n              <CardHeader>Nested</CardHeader>\n              <CardBody>\n                <Button color=\"danger\" onClick={this.toggle('nested_parent')}>\n                  Launch Modal\n                </Button>\n                <Modal\n                  isOpen={this.state.modal_nested_parent}\n                  toggle={this.toggle('nested_parent')}\n                  className={this.props.className}>\n                  <ModalHeader toggle={this.toggle('nested_parent')}>\n                    Modal title\n                  </ModalHeader>\n                  <ModalBody>\n                    Lorem ipsum dolor sit amet, consectetur adipisicing elit,\n                    sed do eiusmod tempor incididunt ut labore et dolore magna\n                    aliqua. Ut enim ad minim veniam, quis nostrud exercitation\n                    ullamco laboris nisi ut aliquip ex ea commodo consequat.\n                    Duis aute irure dolor in reprehenderit in voluptate velit\n                    esse cillum dolore eu fugiat nulla pariatur. Excepteur sint\n                    occaecat cupidatat non proident, sunt in culpa qui officia\n                    deserunt mollit anim id est laborum.\n                    <br />\n                    <Button color=\"success\" onClick={this.toggle('nested')}>\n                      Show Nested Model\n                    </Button>\n                    <Modal\n                      isOpen={this.state.modal_nested}\n                      toggle={this.toggle('nested')}>\n                      <ModalHeader>Nested Modal title</ModalHeader>\n                      <ModalBody>Stuff and things</ModalBody>\n                      <ModalFooter>\n                        <Button color=\"primary\" onClick={this.toggle('nested')}>\n                          Done\n                        </Button>{' '}\n                        <Button\n                          color=\"secondary\"\n                          onClick={this.toggle('nested_parent')}>\n                          All Done\n                        </Button>\n                      </ModalFooter>\n                    </Modal>\n                  </ModalBody>\n                  <ModalFooter>\n                    <Button\n                      color=\"primary\"\n                      onClick={this.toggle('nested_parent')}>\n                      Do Something\n                    </Button>{' '}\n                    <Button\n                      color=\"secondary\"\n                      onClick={this.toggle('nested_parent')}>\n                      Cancel\n                    </Button>\n                  </ModalFooter>\n                </Modal>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      </Page>\n    );\n  }\n}\n\nexport default ModalPage;\n","import React from 'react';\n\nimport { Row, Col } from 'reactstrap';\n\nimport Page from 'components/Page';\nimport { NumberWidget, IconWidget } from 'components/Widget';\n\nimport { iconWidgetsData, numberWidgetsData } from 'demos/widgetPage';\n\nconst WidgetPage = () => {\n  return (\n    <Page\n      className=\"WidgetPage\"\n      title=\"Widgets\"\n      breadcrumbs={[{ name: 'widgets', active: true }]}\n    >\n      <Row>\n        {numberWidgetsData.map(({ color }, index) => (\n          <Col key={index} lg={4} md={6} sm={6} xs={12} className=\"mb-3\">\n            <NumberWidget\n              title=\"Total Profit\"\n              subtitle=\"This month\"\n              number=\"$17,800\"\n              color={color}\n              progress={{\n                value: 75,\n                label: 'Last month',\n              }}\n            />\n          </Col>\n        ))}\n      </Row>\n\n      <Row>\n        {iconWidgetsData.map(\n          ({ bgColor, icon, title, subtitle, ...restProps }, index) => (\n            <Col key={index} lg={4} md={6} sm={6} xs={12} className=\"mb-3\">\n              <IconWidget\n                bgColor={bgColor}\n                icon={icon}\n                title={title}\n                subtitle={subtitle}\n                {...restProps}\n              />\n            </Col>\n          )\n        )}\n      </Row>\n    </Page>\n  );\n};\n\nexport default WidgetPage;\n","import { STATE_LOGIN, STATE_SIGNUP } from 'components/AuthForm';\nimport GAListener from 'components/GAListener';\nimport { EmptyLayout, LayoutRoute, MainLayout } from 'components/Layout';\nimport AlertPage from 'pages/AlertPage';\nimport AuthModalPage from 'pages/AuthModalPage';\nimport AuthPage from 'pages/AuthPage';\nimport BadgePage from 'pages/BadgePage';\nimport ButtonGroupPage from 'pages/ButtonGroupPage';\nimport ButtonPage from 'pages/ButtonPage';\nimport CardPage from 'pages/CardPage';\nimport ChartPage from 'pages/ChartPage';\n// pages\nimport DashboardPage from 'pages/DashboardPage';\nimport DropdownPage from 'pages/DropdownPage';\nimport FormPage from 'pages/FormPage';\nimport InputGroupPage from 'pages/InputGroupPage';\nimport ModalPage from 'pages/ModalPage';\nimport ProgressPage from 'pages/ProgressPage';\nimport TablePage from 'pages/TablePage';\nimport TypographyPage from 'pages/TypographyPage';\nimport WidgetPage from 'pages/WidgetPage';\nimport React from 'react';\nimport componentQueries from 'react-component-queries';\nimport { BrowserRouter, Redirect, Switch } from 'react-router-dom';\nimport './styles/reduction.scss';\n\nconst getBasename = () => {\n  return `/${process.env.PUBLIC_URL.split('/').pop()}`;\n};\n\nclass App extends React.Component {\n  render() {\n    return (\n      <BrowserRouter basename={getBasename()}>\n        <GAListener>\n          <Switch>\n            <LayoutRoute\n              exact\n              path=\"/classes\"\n              layout={MainLayout}\n              component={ButtonPage}\n            />\n            <LayoutRoute\n              exact\n              path=\"/artists\"\n              layout={MainLayout}\n              component={CardPage}\n            />\n            <LayoutRoute\n              exact\n              path=\"/venues\"\n              layout={MainLayout}\n              component={WidgetPage}\n            />\n            {/* <LayoutRoute\n              exact\n              path=\"/login\"\n              layout={EmptyLayout}\n              component={props => (\n                <AuthPage {...props} authState={STATE_LOGIN} />\n              )}\n            />\n            <LayoutRoute\n              exact\n              path=\"/signup\"\n              layout={EmptyLayout}\n              component={props => (\n                <AuthPage {...props} authState={STATE_SIGNUP} />\n              )}\n            /> */}\n            <LayoutRoute\n              exact\n              path=\"/login-modal\"\n              layout={MainLayout}\n              component={AuthModalPage}\n            />\n            <LayoutRoute\n              exact\n              path=\"/\"\n              layout={MainLayout}\n              component={DashboardPage}\n            />\n            {/* <LayoutRoute\n              exact\n              path=\"/buttons\"\n              layout={MainLayout}\n              component={ButtonPage}\n            />\n            <LayoutRoute\n              exact\n              path=\"/cards\"\n              layout={MainLayout}\n              component={CardPage}\n            />\n            <LayoutRoute\n              exact\n              path=\"/widgets\"\n              layout={MainLayout}\n              component={WidgetPage}\n            />\n            <LayoutRoute\n              exact\n              path=\"/typography\"\n              layout={MainLayout}\n              component={TypographyPage}\n            />\n            <LayoutRoute\n              exact\n              path=\"/alerts\"\n              layout={MainLayout}\n              component={AlertPage}\n            />\n            <LayoutRoute\n              exact\n              path=\"/tables\"\n              layout={MainLayout}\n              component={TablePage}\n            />\n            <LayoutRoute\n              exact\n              path=\"/badges\"\n              layout={MainLayout}\n              component={BadgePage}\n            />\n            <LayoutRoute\n              exact\n              path=\"/button-groups\"\n              layout={MainLayout}\n              component={ButtonGroupPage}\n            />\n            <LayoutRoute\n              exact\n              path=\"/dropdowns\"\n              layout={MainLayout}\n              component={DropdownPage}\n            />\n            <LayoutRoute\n              exact\n              path=\"/progress\"\n              layout={MainLayout}\n              component={ProgressPage}\n            />\n            <LayoutRoute\n              exact\n              path=\"/modals\"\n              layout={MainLayout}\n              component={ModalPage}\n            />\n            <LayoutRoute\n              exact\n              path=\"/forms\"\n              layout={MainLayout}\n              component={FormPage}\n            />\n            <LayoutRoute\n              exact\n              path=\"/input-groups\"\n              layout={MainLayout}\n              component={InputGroupPage}\n            />\n            <LayoutRoute\n              exact\n              path=\"/charts\"\n              layout={MainLayout}\n              component={ChartPage}\n            />\n            <LayoutRoute\n              exact\n              path=\"/register\"\n              layout={MainLayout}\n              component={AuthPage}\n            /> */}\n            <Redirect to=\"/\" />\n          </Switch>\n        </GAListener>\n      </BrowserRouter>\n    );\n  }\n}\n\nconst query = ({ width }) => {\n  if (width < 575) {\n    return { breakpoint: 'xs' };\n  }\n\n  if (576 < width && width < 767) {\n    return { breakpoint: 'sm' };\n  }\n\n  if (768 < width && width < 991) {\n    return { breakpoint: 'md' };\n  }\n\n  if (992 < width && width < 1199) {\n    return { breakpoint: 'lg' };\n  }\n\n  if (width > 1200) {\n    return { breakpoint: 'xl' };\n  }\n\n  return { breakpoint: 'xs' };\n};\n\nexport default componentQueries(query)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","module.exports = __webpack_public_path__ + \"static/media/100_1.1f7beca5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/100_4.978e51b5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/100_2.82e7c41e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/100_3.6e25d86d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/100_5.fd533725.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo_200.fe82843c.png\";","module.exports = __webpack_public_path__ + \"static/media/100_6.de882536.jpg\";"],"sourceRoot":""}